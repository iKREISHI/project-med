openapi: 3.0.3
info:
  title: Project Med API
  version: 1.0.0
  description: Automated workstation for the doctor on duty
paths:
  /api/v0/ai-recommendation/doctor-appointment/ai-response/:
    post:
      operationId: v0_ai_recommendation_doctor_appointment_ai_response_create
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AIRecommendationsDoctorAppointment'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIRecommendationsDoctorAppointment'
          description: ''
  /api/v0/ai-recommendation/patient-condition/ai-response/:
    post:
      operationId: v0_ai_recommendation_patient_condition_ai_response_create
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AIRecommendationPatientCondition'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIRecommendationPatientCondition'
          description: ''
  /api/v0/appointments/:
    get:
      operationId: v0_appointments_list
      description: Возвращает список приемов к врачу с поддержкой пагинации и фильтрацией
        по диапазону дат. Если переданы query-параметры 'start_date' и 'end_date'
        в формате YYYY-MM-DD, то будут возвращаться только те приемы, у которых appointment_date
        попадает в указанный диапазон.
      summary: Получение списка приемов с пагинацией
      parameters:
      - in: query
        name: end_date
        schema:
          type: string
        description: Конечная дата в формате YYYY-MM-DD
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: start_date
        schema:
          type: string
        description: Начальная дата в формате YYYY-MM-DD
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDoctorAppointmentList'
          description: ''
    post:
      operationId: v0_appointments_create
      description: |-
        API для работы с приемами к врачу с поддержкой пагинации.
        Поддерживаются операции:
          - list: получение списка приемов с пагинацией
            (требуется permission "doctor-appointment.view_doctorappointment"),
          - retrieve: получение приема по id
            (требуется permission "doctor-appointment.view_doctorappointment"),
          - create: создание нового приема
            (требуется permission "doctor-appointment.add_doctorappointment"),
          - update / partial_update: обновление приема
            (требуется permission "doctor-appointment.change_doctorappointment"),
          - destroy: удаление приема
            (требуется permission "doctor-appointment.delete_doctorappointment").
      summary: Создание нового приема
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DoctorAppointment'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoctorAppointment'
          description: ''
  /api/v0/appointments/{id}/:
    get:
      operationId: v0_appointments_retrieve
      description: |-
        API для работы с приемами к врачу с поддержкой пагинации.
        Поддерживаются операции:
          - list: получение списка приемов с пагинацией
            (требуется permission "doctor-appointment.view_doctorappointment"),
          - retrieve: получение приема по id
            (требуется permission "doctor-appointment.view_doctorappointment"),
          - create: создание нового приема
            (требуется permission "doctor-appointment.add_doctorappointment"),
          - update / partial_update: обновление приема
            (требуется permission "doctor-appointment.change_doctorappointment"),
          - destroy: удаление приема
            (требуется permission "doctor-appointment.delete_doctorappointment").
      summary: Получение приема по id
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Приём к врачу.
        required: true
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoctorAppointment'
          description: ''
    put:
      operationId: v0_appointments_update
      description: |-
        API для работы с приемами к врачу с поддержкой пагинации.
        Поддерживаются операции:
          - list: получение списка приемов с пагинацией
            (требуется permission "doctor-appointment.view_doctorappointment"),
          - retrieve: получение приема по id
            (требуется permission "doctor-appointment.view_doctorappointment"),
          - create: создание нового приема
            (требуется permission "doctor-appointment.add_doctorappointment"),
          - update / partial_update: обновление приема
            (требуется permission "doctor-appointment.change_doctorappointment"),
          - destroy: удаление приема
            (требуется permission "doctor-appointment.delete_doctorappointment").
      summary: Полное обновление приема
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Приём к врачу.
        required: true
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DoctorAppointment'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoctorAppointment'
          description: ''
    patch:
      operationId: v0_appointments_partial_update
      description: |-
        API для работы с приемами к врачу с поддержкой пагинации.
        Поддерживаются операции:
          - list: получение списка приемов с пагинацией
            (требуется permission "doctor-appointment.view_doctorappointment"),
          - retrieve: получение приема по id
            (требуется permission "doctor-appointment.view_doctorappointment"),
          - create: создание нового приема
            (требуется permission "doctor-appointment.add_doctorappointment"),
          - update / partial_update: обновление приема
            (требуется permission "doctor-appointment.change_doctorappointment"),
          - destroy: удаление приема
            (требуется permission "doctor-appointment.delete_doctorappointment").
      summary: Частичное обновление приема
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Приём к врачу.
        required: true
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDoctorAppointment'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoctorAppointment'
          description: ''
    delete:
      operationId: v0_appointments_destroy
      description: |-
        API для работы с приемами к врачу с поддержкой пагинации.
        Поддерживаются операции:
          - list: получение списка приемов с пагинацией
            (требуется permission "doctor-appointment.view_doctorappointment"),
          - retrieve: получение приема по id
            (требуется permission "doctor-appointment.view_doctorappointment"),
          - create: создание нового приема
            (требуется permission "doctor-appointment.add_doctorappointment"),
          - update / partial_update: обновление приема
            (требуется permission "doctor-appointment.change_doctorappointment"),
          - destroy: удаление приема
            (требуется permission "doctor-appointment.delete_doctorappointment").
      summary: Удаление приема
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Приём к врачу.
        required: true
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v0/appointments/{id}/sign/:
    post:
      operationId: sign_doctor_appointment
      description: Подписание приема врача с электронным подписям пользователем, который
        является сотрудником.
      parameters:
      - in: header
        name: Authorization
        schema:
          type: string
        description: Токен авторизации пользователя.
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Приём к врачу.
        required: true
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DoctorAppointment'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          description: Успешное подписание приема врача
        '400':
          description: Ошибка при подписании (например, если прием уже подписан)
        '404':
          description: Прием врача не найден или удалён
        '401':
          description: Неавторизованный доступ
        '403':
          description: Пользователь не является сотрудником, или не имеет прав на
            подписание
  /api/v0/booking-appointments/:
    get:
      operationId: v0_booking_appointments_list
      description: Возвращает список записей на прием с поддержкой пагинации и фильтрацией
        по диапазону дат. Если переданы query-параметры 'start_date' и 'end_date'
        в формате YYYY-MM-DD, то будут возвращаться только те записи, у которых vizit_datetime
        попадает в указанный диапазон от начала start_date до конца end_date (до 23:59:59).
      summary: Получение списка записей на прием
      parameters:
      - in: query
        name: end_date
        schema:
          type: string
        description: Конечная дата в формате YYYY-MM-DD
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: start_date
        schema:
          type: string
        description: Начальная дата в формате YYYY-MM-DD
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBookingAppointmentList'
          description: ''
    post:
      operationId: v0_booking_appointments_create
      description: |-
        API для работы с записью на прием с поддержкой пагинации.
        Поддерживаются операции:
          - list: получение списка с пагинацией
          - retrieve: получение по id
          - create: создание
          - update / partial_update: обновление
          - destroy: удаление

        Дополнительно поддерживается фильтрация по диапазону дат.
        При передаче query-параметров "start_date" и "end_date" (формат YYYY-MM-DD)
        будут возвращаться только те записи, у которых vizit_datetime попадает в диапазон
        от начала start_date до конца end_date.
      summary: Создание новой записи на прием
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookingAppointment'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingAppointment'
          description: ''
  /api/v0/booking-appointments/{id}/:
    get:
      operationId: v0_booking_appointments_retrieve
      description: |-
        API для работы с записью на прием с поддержкой пагинации.
        Поддерживаются операции:
          - list: получение списка с пагинацией
          - retrieve: получение по id
          - create: создание
          - update / partial_update: обновление
          - destroy: удаление

        Дополнительно поддерживается фильтрация по диапазону дат.
        При передаче query-параметров "start_date" и "end_date" (формат YYYY-MM-DD)
        будут возвращаться только те записи, у которых vizit_datetime попадает в диапазон
        от начала start_date до конца end_date.
      summary: Получение записи на прием по id
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Запись на прием.
        required: true
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingAppointment'
          description: ''
    put:
      operationId: v0_booking_appointments_update
      description: |-
        API для работы с записью на прием с поддержкой пагинации.
        Поддерживаются операции:
          - list: получение списка с пагинацией
          - retrieve: получение по id
          - create: создание
          - update / partial_update: обновление
          - destroy: удаление

        Дополнительно поддерживается фильтрация по диапазону дат.
        При передаче query-параметров "start_date" и "end_date" (формат YYYY-MM-DD)
        будут возвращаться только те записи, у которых vizit_datetime попадает в диапазон
        от начала start_date до конца end_date.
      summary: Полное обновление записи на прием
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Запись на прием.
        required: true
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookingAppointment'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingAppointment'
          description: ''
    patch:
      operationId: v0_booking_appointments_partial_update
      description: |-
        API для работы с записью на прием с поддержкой пагинации.
        Поддерживаются операции:
          - list: получение списка с пагинацией
          - retrieve: получение по id
          - create: создание
          - update / partial_update: обновление
          - destroy: удаление

        Дополнительно поддерживается фильтрация по диапазону дат.
        При передаче query-параметров "start_date" и "end_date" (формат YYYY-MM-DD)
        будут возвращаться только те записи, у которых vizit_datetime попадает в диапазон
        от начала start_date до конца end_date.
      summary: Частичное обновление записи на прием
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Запись на прием.
        required: true
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBookingAppointment'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingAppointment'
          description: ''
    delete:
      operationId: v0_booking_appointments_destroy
      description: |-
        API для работы с записью на прием с поддержкой пагинации.
        Поддерживаются операции:
          - list: получение списка с пагинацией
          - retrieve: получение по id
          - create: создание
          - update / partial_update: обновление
          - destroy: удаление

        Дополнительно поддерживается фильтрация по диапазону дат.
        При передаче query-параметров "start_date" и "end_date" (формат YYYY-MM-DD)
        будут возвращаться только те записи, у которых vizit_datetime попадает в диапазон
        от начала start_date до конца end_date.
      summary: Удаление записи на прием
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Запись на прием.
        required: true
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v0/chat/rooms/:
    get:
      operationId: v0_chat_rooms_list
      description: |-
        Эндпоинт для работы с чат-комнатами. Список комнат ограничивается только теми,
        в которых пользователь является участником. При доступе к деталям также проверяется,
        что пользователь входит в список участников.
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChatRoom'
          description: ''
    post:
      operationId: v0_chat_rooms_create
      description: |-
        Эндпоинт для работы с чат-комнатами. Список комнат ограничивается только теми,
        в которых пользователь является участником. При доступе к деталям также проверяется,
        что пользователь входит в список участников.
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatRoom'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatRoom'
          description: ''
  /api/v0/chat/rooms/{id}/:
    get:
      operationId: v0_chat_rooms_retrieve
      description: |-
        Эндпоинт для работы с чат-комнатами. Список комнат ограничивается только теми,
        в которых пользователь является участником. При доступе к деталям также проверяется,
        что пользователь входит в список участников.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this chat room.
        required: true
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatRoom'
          description: ''
    put:
      operationId: v0_chat_rooms_update
      description: |-
        Эндпоинт для работы с чат-комнатами. Список комнат ограничивается только теми,
        в которых пользователь является участником. При доступе к деталям также проверяется,
        что пользователь входит в список участников.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this chat room.
        required: true
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatRoom'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatRoom'
          description: ''
    patch:
      operationId: v0_chat_rooms_partial_update
      description: |-
        Эндпоинт для работы с чат-комнатами. Список комнат ограничивается только теми,
        в которых пользователь является участником. При доступе к деталям также проверяется,
        что пользователь входит в список участников.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this chat room.
        required: true
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedChatRoom'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatRoom'
          description: ''
    delete:
      operationId: v0_chat_rooms_destroy
      description: |-
        Эндпоинт для работы с чат-комнатами. Список комнат ограничивается только теми,
        в которых пользователь является участником. При доступе к деталям также проверяется,
        что пользователь входит в список участников.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this chat room.
        required: true
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v0/chat/rooms/{room_id}/messages/:
    get:
      operationId: v0_chat_rooms_messages_list
      description: Возвращает список сообщений в указанной чат-комнате. Доступ разрешён
        только участникам чата.
      summary: Список сообщений чата
      parameters:
      - in: path
        name: room_id
        schema:
          type: integer
        description: Идентификатор чат-комнаты
        required: true
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: v0_chat_rooms_messages_create
      description: Создаёт новое сообщение в чат-комнате. Тип сообщения определяется
        полем `message_type` (например, 'text', 'image', 'file').
      summary: Создание сообщения
      parameters:
      - in: path
        name: room_id
        schema:
          type: integer
        description: Идентификатор чат-комнаты
        required: true
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: {}
      security:
      - cookieAuth: []
      responses:
        '201':
          description: No response body
  /api/v0/chat/rooms/{room_id}/messages/{id}/:
    delete:
      operationId: v0_chat_rooms_messages_destroy
      description: Удаляет сообщение, если текущий пользователь является его отправителем.
      summary: Удаление сообщения
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: pk
        schema:
          type: integer
        description: Идентификатор сообщения
        required: true
      - in: path
        name: room_id
        schema:
          type: integer
        description: Идентификатор чат-комнаты
        required: true
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '204':
          description: Сообщение успешно удалено.
  /api/v0/contractor/:
    get:
      operationId: v0_contractor_list
      description: |-
        API для работы с контрагентами.

        Поддерживаются операции:
          - list: получение списка контрагентов (требуется permission "clients.view_contractor"),
          - retrieve: получение контрагента по id (требуется permission "clients.view_contractor"),
          - create: создание нового контрагента (требуется permission "clients.add_contractor"),
          - update/partial_update: обновление контрагента (требуется permission "clients.change_contractor"),
          - destroy: удаление контрагента (требуется permission "clients.delete_contractor").
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedContractorList'
          description: ''
    post:
      operationId: v0_contractor_create
      description: |-
        API для работы с контрагентами.

        Поддерживаются операции:
          - list: получение списка контрагентов (требуется permission "clients.view_contractor"),
          - retrieve: получение контрагента по id (требуется permission "clients.view_contractor"),
          - create: создание нового контрагента (требуется permission "clients.add_contractor"),
          - update/partial_update: обновление контрагента (требуется permission "clients.change_contractor"),
          - destroy: удаление контрагента (требуется permission "clients.delete_contractor").
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contractor'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contractor'
          description: ''
  /api/v0/contractor/{id}/:
    get:
      operationId: v0_contractor_retrieve
      description: |-
        API для работы с контрагентами.

        Поддерживаются операции:
          - list: получение списка контрагентов (требуется permission "clients.view_contractor"),
          - retrieve: получение контрагента по id (требуется permission "clients.view_contractor"),
          - create: создание нового контрагента (требуется permission "clients.add_contractor"),
          - update/partial_update: обновление контрагента (требуется permission "clients.change_contractor"),
          - destroy: удаление контрагента (требуется permission "clients.delete_contractor").
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Контрагент.
        required: true
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contractor'
          description: ''
    put:
      operationId: v0_contractor_update
      description: |-
        API для работы с контрагентами.

        Поддерживаются операции:
          - list: получение списка контрагентов (требуется permission "clients.view_contractor"),
          - retrieve: получение контрагента по id (требуется permission "clients.view_contractor"),
          - create: создание нового контрагента (требуется permission "clients.add_contractor"),
          - update/partial_update: обновление контрагента (требуется permission "clients.change_contractor"),
          - destroy: удаление контрагента (требуется permission "clients.delete_contractor").
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Контрагент.
        required: true
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contractor'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contractor'
          description: ''
    patch:
      operationId: v0_contractor_partial_update
      description: |-
        API для работы с контрагентами.

        Поддерживаются операции:
          - list: получение списка контрагентов (требуется permission "clients.view_contractor"),
          - retrieve: получение контрагента по id (требуется permission "clients.view_contractor"),
          - create: создание нового контрагента (требуется permission "clients.add_contractor"),
          - update/partial_update: обновление контрагента (требуется permission "clients.change_contractor"),
          - destroy: удаление контрагента (требуется permission "clients.delete_contractor").
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Контрагент.
        required: true
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedContractor'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contractor'
          description: ''
    delete:
      operationId: v0_contractor_destroy
      description: |-
        API для работы с контрагентами.

        Поддерживаются операции:
          - list: получение списка контрагентов (требуется permission "clients.view_contractor"),
          - retrieve: получение контрагента по id (требуется permission "clients.view_contractor"),
          - create: создание нового контрагента (требуется permission "clients.add_contractor"),
          - update/partial_update: обновление контрагента (требуется permission "clients.change_contractor"),
          - destroy: удаление контрагента (требуется permission "clients.delete_contractor").
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Контрагент.
        required: true
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v0/current-user/:
    get:
      operationId: v0_current_user_list
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
  /api/v0/diagnoses/:
    get:
      operationId: v0_diagnoses_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDiagnosisList'
          description: ''
    post:
      operationId: v0_diagnoses_create
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Diagnosis'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Diagnosis'
          description: ''
  /api/v0/diagnoses/{id}/:
    get:
      operationId: v0_diagnoses_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Диагноз.
        required: true
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Diagnosis'
          description: ''
    put:
      operationId: v0_diagnoses_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Диагноз.
        required: true
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Diagnosis'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Diagnosis'
          description: ''
    patch:
      operationId: v0_diagnoses_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Диагноз.
        required: true
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDiagnosis'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Diagnosis'
          description: ''
    delete:
      operationId: v0_diagnoses_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Диагноз.
        required: true
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v0/diagnosis-categories/:
    get:
      operationId: v0_diagnosis_categories_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDiagnosisCategoryList'
          description: ''
    post:
      operationId: v0_diagnosis_categories_create
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiagnosisCategory'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiagnosisCategory'
          description: ''
  /api/v0/diagnosis-categories/{id}/:
    get:
      operationId: v0_diagnosis_categories_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Категории диагноза.
        required: true
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiagnosisCategory'
          description: ''
    put:
      operationId: v0_diagnosis_categories_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Категории диагноза.
        required: true
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiagnosisCategory'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiagnosisCategory'
          description: ''
    patch:
      operationId: v0_diagnosis_categories_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Категории диагноза.
        required: true
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDiagnosisCategory'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiagnosisCategory'
          description: ''
    delete:
      operationId: v0_diagnosis_categories_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Категории диагноза.
        required: true
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v0/employee/:
    get:
      operationId: v0_employee_list
      description: |-
        Возвращает список сотрудников с пагинацией. Поддерживает поиск по: - Началу фамилии
        - Началу имени
        - Началу отчества
        - Номеру телефона
        Пример: /api/employees/?search=Иван Петров 7900
      summary: Получение списка сотрудников
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: search
        schema:
          type: string
        description: Поисковая строка (разделение терминов пробелом)
        examples:
          Пример1:
            value: Иванов
            summary: Пример 1
          Пример2:
            value: Сидоров 7999
            summary: Пример 2
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEmployeeList'
          description: ''
    post:
      operationId: v0_employee_create
      description: |-
        API для работы с сотрудниками с поддержкой пагинации.
        Поддерживаются операции:
          - list: получение списка сотрудников с пагинацией (требуется permission "staffing.view_employee"),
          - retrieve: получение сотрудника по UUID (требуется permission "staffing.view_employee"),
          - create: создание нового сотрудника (требуется permission "staffing.add_employee"),
          - update / partial_update: обновление сотрудника (требуется permission "staffing.change_employee"),
          - destroy: удаление сотрудника (требуется permission "staffing.delete_employee").
      summary: Создание нового сотрудника
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /api/v0/employee/{id}/:
    get:
      operationId: v0_employee_retrieve
      description: |-
        API для работы с сотрудниками с поддержкой пагинации.
        Поддерживаются операции:
          - list: получение списка сотрудников с пагинацией (требуется permission "staffing.view_employee"),
          - retrieve: получение сотрудника по UUID (требуется permission "staffing.view_employee"),
          - create: создание нового сотрудника (требуется permission "staffing.add_employee"),
          - update / partial_update: обновление сотрудника (требуется permission "staffing.change_employee"),
          - destroy: удаление сотрудника (требуется permission "staffing.delete_employee").
      summary: Получение сотрудника по ID
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Сотрудник.
        required: true
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
          description: ''
    put:
      operationId: v0_employee_update
      description: |-
        API для работы с сотрудниками с поддержкой пагинации.
        Поддерживаются операции:
          - list: получение списка сотрудников с пагинацией (требуется permission "staffing.view_employee"),
          - retrieve: получение сотрудника по UUID (требуется permission "staffing.view_employee"),
          - create: создание нового сотрудника (требуется permission "staffing.add_employee"),
          - update / partial_update: обновление сотрудника (требуется permission "staffing.change_employee"),
          - destroy: удаление сотрудника (требуется permission "staffing.delete_employee").
      summary: Полное обновление данных сотрудника
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Сотрудник.
        required: true
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
          description: ''
    patch:
      operationId: v0_employee_partial_update
      description: |-
        API для работы с сотрудниками с поддержкой пагинации.
        Поддерживаются операции:
          - list: получение списка сотрудников с пагинацией (требуется permission "staffing.view_employee"),
          - retrieve: получение сотрудника по UUID (требуется permission "staffing.view_employee"),
          - create: создание нового сотрудника (требуется permission "staffing.add_employee"),
          - update / partial_update: обновление сотрудника (требуется permission "staffing.change_employee"),
          - destroy: удаление сотрудника (требуется permission "staffing.delete_employee").
      summary: Частичное обновление данных сотрудника
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Сотрудник.
        required: true
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEmployee'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
          description: ''
    delete:
      operationId: v0_employee_destroy
      description: |-
        API для работы с сотрудниками с поддержкой пагинации.
        Поддерживаются операции:
          - list: получение списка сотрудников с пагинацией (требуется permission "staffing.view_employee"),
          - retrieve: получение сотрудника по UUID (требуется permission "staffing.view_employee"),
          - create: создание нового сотрудника (требуется permission "staffing.add_employee"),
          - update / partial_update: обновление сотрудника (требуется permission "staffing.change_employee"),
          - destroy: удаление сотрудника (требуется permission "staffing.delete_employee").
      summary: Удаление сотрудника
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Сотрудник.
        required: true
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
        '403':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /api/v0/filial/:
    get:
      operationId: v0_filial_list
      description: Получение списка филиалов с пагинацией. Требуется permission 'company_structure.view_filial'.
      summary: Список филиалов
      parameters:
      - in: query
        name: page
        schema:
          type: integer
        description: Номер страницы
      - in: query
        name: page_size
        schema:
          type: integer
        description: Количество элементов на странице
      - in: query
        name: search
        schema:
          type: string
        description: Поисковая строка (разделение терминов пробелом)
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFilialList'
          description: ''
    post:
      operationId: v0_filial_create
      description: Создание нового филиала. Требуется permission 'company_structure.add_filial'.
      summary: Создание филиала
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Filial'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Filial'
          description: ''
  /api/v0/filial-departments/:
    get:
      operationId: v0_filial_departments_list
      description: |-
        API для работы с подразделениями филиала.

        Поддерживаемые операции:
          - list: получение списка подразделений,
          - retrieve: получение подразделения по id,
          - create: создание нового подразделения,
          - update/partial_update: обновление подразделения,
          - destroy: удаление подразделения.

        Требуемые разрешения (DjangoModelPermissions):
          - Для просмотра: company_structure.view_filialdepartment,
          - Для создания: company_structure.add_filialdepartment,
          - Для обновления: company_structure.change_filialdepartment,
          - Для удаления: company_structure.delete_filialdepartment.
      parameters:
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FilialDepartment'
          description: ''
    post:
      operationId: v0_filial_departments_create
      description: |-
        API для работы с подразделениями филиала.

        Поддерживаемые операции:
          - list: получение списка подразделений,
          - retrieve: получение подразделения по id,
          - create: создание нового подразделения,
          - update/partial_update: обновление подразделения,
          - destroy: удаление подразделения.

        Требуемые разрешения (DjangoModelPermissions):
          - Для просмотра: company_structure.view_filialdepartment,
          - Для создания: company_structure.add_filialdepartment,
          - Для обновления: company_structure.change_filialdepartment,
          - Для удаления: company_structure.delete_filialdepartment.
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilialDepartment'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilialDepartment'
          description: ''
  /api/v0/filial-departments/{id}/:
    get:
      operationId: v0_filial_departments_retrieve
      description: |-
        API для работы с подразделениями филиала.

        Поддерживаемые операции:
          - list: получение списка подразделений,
          - retrieve: получение подразделения по id,
          - create: создание нового подразделения,
          - update/partial_update: обновление подразделения,
          - destroy: удаление подразделения.

        Требуемые разрешения (DjangoModelPermissions):
          - Для просмотра: company_structure.view_filialdepartment,
          - Для создания: company_structure.add_filialdepartment,
          - Для обновления: company_structure.change_filialdepartment,
          - Для удаления: company_structure.delete_filialdepartment.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Отделение филиала.
        required: true
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilialDepartment'
          description: ''
    put:
      operationId: v0_filial_departments_update
      description: |-
        API для работы с подразделениями филиала.

        Поддерживаемые операции:
          - list: получение списка подразделений,
          - retrieve: получение подразделения по id,
          - create: создание нового подразделения,
          - update/partial_update: обновление подразделения,
          - destroy: удаление подразделения.

        Требуемые разрешения (DjangoModelPermissions):
          - Для просмотра: company_structure.view_filialdepartment,
          - Для создания: company_structure.add_filialdepartment,
          - Для обновления: company_structure.change_filialdepartment,
          - Для удаления: company_structure.delete_filialdepartment.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Отделение филиала.
        required: true
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilialDepartment'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilialDepartment'
          description: ''
    patch:
      operationId: v0_filial_departments_partial_update
      description: |-
        API для работы с подразделениями филиала.

        Поддерживаемые операции:
          - list: получение списка подразделений,
          - retrieve: получение подразделения по id,
          - create: создание нового подразделения,
          - update/partial_update: обновление подразделения,
          - destroy: удаление подразделения.

        Требуемые разрешения (DjangoModelPermissions):
          - Для просмотра: company_structure.view_filialdepartment,
          - Для создания: company_structure.add_filialdepartment,
          - Для обновления: company_structure.change_filialdepartment,
          - Для удаления: company_structure.delete_filialdepartment.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Отделение филиала.
        required: true
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFilialDepartment'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilialDepartment'
          description: ''
    delete:
      operationId: v0_filial_departments_destroy
      description: |-
        API для работы с подразделениями филиала.

        Поддерживаемые операции:
          - list: получение списка подразделений,
          - retrieve: получение подразделения по id,
          - create: создание нового подразделения,
          - update/partial_update: обновление подразделения,
          - destroy: удаление подразделения.

        Требуемые разрешения (DjangoModelPermissions):
          - Для просмотра: company_structure.view_filialdepartment,
          - Для создания: company_structure.add_filialdepartment,
          - Для обновления: company_structure.change_filialdepartment,
          - Для удаления: company_structure.delete_filialdepartment.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Отделение филиала.
        required: true
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v0/filial/{id}/:
    get:
      operationId: v0_filial_retrieve
      description: Получение информации о филиале по его id. Требуется permission
        'company_structure.view_filial'.
      summary: Детали филиала
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Филиал.
        required: true
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Filial'
          description: ''
    put:
      operationId: v0_filial_update
      description: Обновление данных филиала. Требуется permission 'company_structure.change_filial'.
      summary: Обновление филиала
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Филиал.
        required: true
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Filial'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Filial'
          description: ''
    patch:
      operationId: v0_filial_partial_update
      description: Частичное обновление данных филиала. Требуется permission 'company_structure.change_filial'.
      summary: Частичное обновление филиала
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Филиал.
        required: true
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFilial'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Filial'
          description: ''
    delete:
      operationId: v0_filial_destroy
      description: Удаление филиала. Требуется permission 'company_structure.delete_filial'.
      summary: Удаление филиала
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Филиал.
        required: true
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v0/hospital-stays/:
    get:
      operationId: v0_hospital_stays_list
      description: |-
        API для работы с госпитализацией пациента с поддержкой пагинации.
        Поддерживаются операции:
          - list: получение списка с пагинацией
            (требуется permission "hospital_stays.view_hospitalstays"),
          - retrieve: получение  по id
            (требуется permission "hospital_stays.view_hospitalstays"),
          - create: создание нового
            (требуется permission "hospital_stays.add_hospitalstays"),
          - update / partial_update: обновление
            (требуется permission "hospital_stays.change_hospitalstays"),
          - destroy: удаление
            (требуется permission "hospital_stays.delete_hospitalstays").
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedHospitalStaysList'
          description: ''
    post:
      operationId: v0_hospital_stays_create
      description: |-
        API для работы с госпитализацией пациента с поддержкой пагинации.
        Поддерживаются операции:
          - list: получение списка с пагинацией
            (требуется permission "hospital_stays.view_hospitalstays"),
          - retrieve: получение  по id
            (требуется permission "hospital_stays.view_hospitalstays"),
          - create: создание нового
            (требуется permission "hospital_stays.add_hospitalstays"),
          - update / partial_update: обновление
            (требуется permission "hospital_stays.change_hospitalstays"),
          - destroy: удаление
            (требуется permission "hospital_stays.delete_hospitalstays").
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HospitalStays'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HospitalStays'
          description: ''
  /api/v0/hospital-stays/{id}/:
    get:
      operationId: v0_hospital_stays_retrieve
      description: |-
        API для работы с госпитализацией пациента с поддержкой пагинации.
        Поддерживаются операции:
          - list: получение списка с пагинацией
            (требуется permission "hospital_stays.view_hospitalstays"),
          - retrieve: получение  по id
            (требуется permission "hospital_stays.view_hospitalstays"),
          - create: создание нового
            (требуется permission "hospital_stays.add_hospitalstays"),
          - update / partial_update: обновление
            (требуется permission "hospital_stays.change_hospitalstays"),
          - destroy: удаление
            (требуется permission "hospital_stays.delete_hospitalstays").
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Госпитализация.
        required: true
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HospitalStays'
          description: ''
    put:
      operationId: v0_hospital_stays_update
      description: |-
        API для работы с госпитализацией пациента с поддержкой пагинации.
        Поддерживаются операции:
          - list: получение списка с пагинацией
            (требуется permission "hospital_stays.view_hospitalstays"),
          - retrieve: получение  по id
            (требуется permission "hospital_stays.view_hospitalstays"),
          - create: создание нового
            (требуется permission "hospital_stays.add_hospitalstays"),
          - update / partial_update: обновление
            (требуется permission "hospital_stays.change_hospitalstays"),
          - destroy: удаление
            (требуется permission "hospital_stays.delete_hospitalstays").
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Госпитализация.
        required: true
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HospitalStays'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HospitalStays'
          description: ''
    patch:
      operationId: v0_hospital_stays_partial_update
      description: |-
        API для работы с госпитализацией пациента с поддержкой пагинации.
        Поддерживаются операции:
          - list: получение списка с пагинацией
            (требуется permission "hospital_stays.view_hospitalstays"),
          - retrieve: получение  по id
            (требуется permission "hospital_stays.view_hospitalstays"),
          - create: создание нового
            (требуется permission "hospital_stays.add_hospitalstays"),
          - update / partial_update: обновление
            (требуется permission "hospital_stays.change_hospitalstays"),
          - destroy: удаление
            (требуется permission "hospital_stays.delete_hospitalstays").
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Госпитализация.
        required: true
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedHospitalStays'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HospitalStays'
          description: ''
    delete:
      operationId: v0_hospital_stays_destroy
      description: |-
        API для работы с госпитализацией пациента с поддержкой пагинации.
        Поддерживаются операции:
          - list: получение списка с пагинацией
            (требуется permission "hospital_stays.view_hospitalstays"),
          - retrieve: получение  по id
            (требуется permission "hospital_stays.view_hospitalstays"),
          - create: создание нового
            (требуется permission "hospital_stays.add_hospitalstays"),
          - update / partial_update: обновление
            (требуется permission "hospital_stays.change_hospitalstays"),
          - destroy: удаление
            (требуется permission "hospital_stays.delete_hospitalstays").
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Госпитализация.
        required: true
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v0/laboratory/:
    get:
      operationId: v0_laboratory_list
      description: API для просмотра лабораторий.
      parameters:
      - in: query
        name: page
        schema:
          type: integer
        description: Номер страницы для пагинации.
      - in: query
        name: page_size
        schema:
          type: integer
        description: Количество объектов на странице.
      - in: query
        name: search
        schema:
          type: string
        description: 'Поисковый запрос для поиска по следующим полям: name, address.'
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLaboratoryModelList'
          description: ''
  /api/v0/laboratory-research/:
    get:
      operationId: v0_laboratory_research_list
      description: API для просмотра лабораторных исследований.
      parameters:
      - in: query
        name: page
        schema:
          type: integer
        description: Номер страницы для пагинации.
      - in: query
        name: page_size
        schema:
          type: integer
        description: Количество объектов на странице.
      - in: query
        name: search
        schema:
          type: string
        description: 'Поисковый запрос для поиска по полям: number, status, laboratory__name.'
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLaboratoryResearchModelList'
          description: ''
  /api/v0/laboratory-research-pdf/:
    get:
      operationId: v0_laboratory_research_pdf_list
      description: API для просмотра PDF отчетов лабораторных исследований.
      parameters:
      - in: query
        name: page
        schema:
          type: integer
        description: Номер страницы для пагинации.
      - in: query
        name: page_size
        schema:
          type: integer
        description: Количество объектов на странице.
      - in: query
        name: search
        schema:
          type: string
        description: 'Поисковый запрос для поиска по полям: research__lab_direction_guid,
          created_at.'
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLaboratoryResearchPDFModelList'
          description: ''
  /api/v0/laboratory-research-pdf/{research__lab_direction_guid}/:
    get:
      operationId: v0_laboratory_research_pdf_retrieve
      description: API для просмотра PDF отчетов лабораторных исследований.
      parameters:
      - in: query
        name: page
        schema:
          type: integer
        description: Номер страницы для пагинации.
      - in: query
        name: page_size
        schema:
          type: integer
        description: Количество объектов на странице.
      - in: path
        name: research__lab_direction_guid
        schema:
          type: string
          format: uuid
          title: GUID направления
        required: true
      - in: query
        name: search
        schema:
          type: string
        description: 'Поисковый запрос для поиска по полям: research__lab_direction_guid,
          created_at.'
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LaboratoryResearchPDFModel'
          description: ''
  /api/v0/laboratory-research/{lab_direction_guid}/:
    get:
      operationId: v0_laboratory_research_retrieve
      description: API для просмотра лабораторных исследований.
      parameters:
      - in: path
        name: lab_direction_guid
        schema:
          type: string
          format: uuid
          title: GUID направления
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Номер страницы для пагинации.
      - in: query
        name: page_size
        schema:
          type: integer
        description: Количество объектов на странице.
      - in: query
        name: search
        schema:
          type: string
        description: 'Поисковый запрос для поиска по полям: number, status, laboratory__name.'
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LaboratoryResearchModel'
          description: ''
  /api/v0/laboratory/{id}/:
    get:
      operationId: v0_laboratory_retrieve
      description: API для просмотра лабораторий.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Лаборатория.
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Номер страницы для пагинации.
      - in: query
        name: page_size
        schema:
          type: integer
        description: Количество объектов на странице.
      - in: query
        name: search
        schema:
          type: string
        description: 'Поисковый запрос для поиска по следующим полям: name, address.'
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LaboratoryModel'
          description: ''
  /api/v0/login/:
    post:
      operationId: v0_login_create
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                  user_id:
                    type: integer
                  position_id:
                    type: integer
                  position:
                    type: string
                example:
                  detail: Успешный вход
                  user_id: 1
                  position_id: 2
                  position: Менеджер
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                example:
                  detail: Вы уже авторизованы
          description: ''
  /api/v0/logout/:
    post:
      operationId: v0_logout_create
      tags:
      - v0
      security:
      - cookieAuth: []
      - {}
      responses:
        '201':
          description: No response body
  /api/v0/medical-card/:
    get:
      operationId: v0_medical_card_list
      description: |-
        API для работы с медицинскими картами с поддержкой пагинации.

        Поддерживаются операции:
          - list: получение списка медицинских карт (требуется permission "registry.view_medicalcard"),
          - retrieve: получение медицинской карты по ID (требуется permission "registry.view_medicalcard"),
          - create: создание новой медицинской карты (требуется permission "registry.add_medicalcard"),
          - update/partial_update: обновление медицинской карты (требуется permission "registry.change_medicalcard"),
          - destroy: удаление медицинской карты (требуется permission "registry.delete_medicalcard").
      parameters:
      - in: query
        name: page
        schema:
          type: integer
        description: Номер страницы для пагинации.
      - in: query
        name: page_size
        schema:
          type: integer
        description: Количество объектов на странице.
      - in: query
        name: search
        schema:
          type: string
        description: 'Поисковый запрос для поиска по следующим полям: name, number,
          card_type__name, client__last_name, client__first_name, client__patronymic,
          client__date_of_birth.'
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMedicalCardList'
          description: ''
    post:
      operationId: v0_medical_card_create
      description: |-
        API для работы с медицинскими картами с поддержкой пагинации.

        Поддерживаются операции:
          - list: получение списка медицинских карт (требуется permission "registry.view_medicalcard"),
          - retrieve: получение медицинской карты по ID (требуется permission "registry.view_medicalcard"),
          - create: создание новой медицинской карты (требуется permission "registry.add_medicalcard"),
          - update/partial_update: обновление медицинской карты (требуется permission "registry.change_medicalcard"),
          - destroy: удаление медицинской карты (требуется permission "registry.delete_medicalcard").
      parameters:
      - in: query
        name: page
        schema:
          type: integer
        description: Номер страницы для пагинации.
      - in: query
        name: page_size
        schema:
          type: integer
        description: Количество объектов на странице.
      - in: query
        name: search
        schema:
          type: string
        description: 'Поисковый запрос для поиска по следующим полям: name, number,
          card_type__name, client__last_name, client__first_name, client__patronymic,
          client__date_of_birth.'
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicalCard'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicalCard'
          description: ''
  /api/v0/medical-card-types/:
    get:
      operationId: v0_medical_card_types_list
      description: |-
        ViewSet для работы с объектами MedicalCardType.
        Поддерживает методы: list, create, retrieve, update, partial_update, destroy.
        Добавлены права на вход и проверки Django-пермишенов на уровне модели.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMedicalCardTypeList'
          description: ''
    post:
      operationId: v0_medical_card_types_create
      description: |-
        ViewSet для работы с объектами MedicalCardType.
        Поддерживает методы: list, create, retrieve, update, partial_update, destroy.
        Добавлены права на вход и проверки Django-пермишенов на уровне модели.
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicalCardType'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicalCardType'
          description: ''
  /api/v0/medical-card-types/{id}/:
    get:
      operationId: v0_medical_card_types_retrieve
      description: |-
        ViewSet для работы с объектами MedicalCardType.
        Поддерживает методы: list, create, retrieve, update, partial_update, destroy.
        Добавлены права на вход и проверки Django-пермишенов на уровне модели.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Тип мед.карты.
        required: true
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicalCardType'
          description: ''
    put:
      operationId: v0_medical_card_types_update
      description: |-
        ViewSet для работы с объектами MedicalCardType.
        Поддерживает методы: list, create, retrieve, update, partial_update, destroy.
        Добавлены права на вход и проверки Django-пермишенов на уровне модели.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Тип мед.карты.
        required: true
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicalCardType'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicalCardType'
          description: ''
    patch:
      operationId: v0_medical_card_types_partial_update
      description: |-
        ViewSet для работы с объектами MedicalCardType.
        Поддерживает методы: list, create, retrieve, update, partial_update, destroy.
        Добавлены права на вход и проверки Django-пермишенов на уровне модели.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Тип мед.карты.
        required: true
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMedicalCardType'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicalCardType'
          description: ''
    delete:
      operationId: v0_medical_card_types_destroy
      description: |-
        ViewSet для работы с объектами MedicalCardType.
        Поддерживает методы: list, create, retrieve, update, partial_update, destroy.
        Добавлены права на вход и проверки Django-пермишенов на уровне модели.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Тип мед.карты.
        required: true
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v0/medical-card/{id}/:
    get:
      operationId: v0_medical_card_retrieve
      description: |-
        API для работы с медицинскими картами с поддержкой пагинации.

        Поддерживаются операции:
          - list: получение списка медицинских карт (требуется permission "registry.view_medicalcard"),
          - retrieve: получение медицинской карты по ID (требуется permission "registry.view_medicalcard"),
          - create: создание новой медицинской карты (требуется permission "registry.add_medicalcard"),
          - update/partial_update: обновление медицинской карты (требуется permission "registry.change_medicalcard"),
          - destroy: удаление медицинской карты (требуется permission "registry.delete_medicalcard").
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Медицинская карта.
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Номер страницы для пагинации.
      - in: query
        name: page_size
        schema:
          type: integer
        description: Количество объектов на странице.
      - in: query
        name: search
        schema:
          type: string
        description: 'Поисковый запрос для поиска по следующим полям: name, number,
          card_type__name, client__last_name, client__first_name, client__patronymic,
          client__date_of_birth.'
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicalCard'
          description: ''
    put:
      operationId: v0_medical_card_update
      description: |-
        API для работы с медицинскими картами с поддержкой пагинации.

        Поддерживаются операции:
          - list: получение списка медицинских карт (требуется permission "registry.view_medicalcard"),
          - retrieve: получение медицинской карты по ID (требуется permission "registry.view_medicalcard"),
          - create: создание новой медицинской карты (требуется permission "registry.add_medicalcard"),
          - update/partial_update: обновление медицинской карты (требуется permission "registry.change_medicalcard"),
          - destroy: удаление медицинской карты (требуется permission "registry.delete_medicalcard").
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Медицинская карта.
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Номер страницы для пагинации.
      - in: query
        name: page_size
        schema:
          type: integer
        description: Количество объектов на странице.
      - in: query
        name: search
        schema:
          type: string
        description: 'Поисковый запрос для поиска по следующим полям: name, number,
          card_type__name, client__last_name, client__first_name, client__patronymic,
          client__date_of_birth.'
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicalCard'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicalCard'
          description: ''
    patch:
      operationId: v0_medical_card_partial_update
      description: |-
        API для работы с медицинскими картами с поддержкой пагинации.

        Поддерживаются операции:
          - list: получение списка медицинских карт (требуется permission "registry.view_medicalcard"),
          - retrieve: получение медицинской карты по ID (требуется permission "registry.view_medicalcard"),
          - create: создание новой медицинской карты (требуется permission "registry.add_medicalcard"),
          - update/partial_update: обновление медицинской карты (требуется permission "registry.change_medicalcard"),
          - destroy: удаление медицинской карты (требуется permission "registry.delete_medicalcard").
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Медицинская карта.
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Номер страницы для пагинации.
      - in: query
        name: page_size
        schema:
          type: integer
        description: Количество объектов на странице.
      - in: query
        name: search
        schema:
          type: string
        description: 'Поисковый запрос для поиска по следующим полям: name, number,
          card_type__name, client__last_name, client__first_name, client__patronymic,
          client__date_of_birth.'
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMedicalCard'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicalCard'
          description: ''
    delete:
      operationId: v0_medical_card_destroy
      description: |-
        API для работы с медицинскими картами с поддержкой пагинации.

        Поддерживаются операции:
          - list: получение списка медицинских карт (требуется permission "registry.view_medicalcard"),
          - retrieve: получение медицинской карты по ID (требуется permission "registry.view_medicalcard"),
          - create: создание новой медицинской карты (требуется permission "registry.add_medicalcard"),
          - update/partial_update: обновление медицинской карты (требуется permission "registry.change_medicalcard"),
          - destroy: удаление медицинской карты (требуется permission "registry.delete_medicalcard").
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Медицинская карта.
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Номер страницы для пагинации.
      - in: query
        name: page_size
        schema:
          type: integer
        description: Количество объектов на странице.
      - in: query
        name: search
        schema:
          type: string
        description: 'Поисковый запрос для поиска по следующим полям: name, number,
          card_type__name, client__last_name, client__first_name, client__patronymic,
          client__date_of_birth.'
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v0/medical-card/{id}/sign/:
    post:
      operationId: sign_medical_card
      description: Подписание медицинской карты с электронным подписям пользователем,
        который является сотрудником.
      parameters:
      - in: header
        name: Authorization
        schema:
          type: string
        description: Токен авторизации пользователя.
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Медицинская карта.
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Номер страницы для пагинации.
      - in: query
        name: page_size
        schema:
          type: integer
        description: Количество объектов на странице.
      - in: query
        name: search
        schema:
          type: string
        description: 'Поисковый запрос для поиска по следующим полям: name, number,
          card_type__name, client__last_name, client__first_name, client__patronymic,
          client__date_of_birth.'
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicalCard'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          description: Успешное подписание медицинской карты
        '400':
          description: Ошибка при подписании (например, если карта уже подписана)
        '404':
          description: Медицинская карта не найдена или удалена
        '401':
          description: Неавторизованный доступ
        '403':
          description: Пользователь не является сотрудником, или не имеет прав на
            подписание
  /api/v0/medical-drug/:
    get:
      operationId: v0_medical_drug_list
      description: API для просмотра аптечных препаратов.
      parameters:
      - in: query
        name: page
        schema:
          type: integer
        description: Номер страницы для пагинации.
      - in: query
        name: page_size
        schema:
          type: integer
        description: Количество объектов на странице.
      - in: query
        name: search
        schema:
          type: string
        description: 'Поисковый запрос для поиска по следующим полям: klp_code, smnn_code,
          ktru_code, name_trade, country, oksm_code, name_producer.'
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMedicineModelList'
          description: ''
  /api/v0/medical-drug/{id}/:
    get:
      operationId: v0_medical_drug_retrieve
      description: API для просмотра аптечных препаратов.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Лекарственный препарат.
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Номер страницы для пагинации.
      - in: query
        name: page_size
        schema:
          type: integer
        description: Количество объектов на странице.
      - in: query
        name: search
        schema:
          type: string
        description: 'Поисковый запрос для поиска по следующим полям: klp_code, smnn_code,
          ktru_code, name_trade, country, oksm_code, name_producer.'
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicineModel'
          description: ''
  /api/v0/patient/:
    get:
      operationId: v0_patient_list
      description: |-
        Возвращает список пациентов с пагинацией. Поддерживает поиск по: - Началу фамилии (регистронезависимый)
        - Началу имени
        - Началу отчества
        - Номеру телефона
        Пример: /api/patients/?search=Иван Петров 7900
      summary: Получение списка пациентов
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: search
        schema:
          type: string
        description: Поисковая строка (разделение терминов пробелом)
        examples:
          Пример1:
            value: Иванов
            summary: Пример 1
          Пример2:
            value: Сидоров 7999
            summary: Пример 2
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPatientList'
          description: ''
    post:
      operationId: v0_patient_create
      description: |-
        API для работы с пациентами с поддержкой пагинации.
        Поддерживаются операции:
          - list: получение списка пациентов с пагинацией и поиском,
          - retrieve: получение пациента по ID,
          - create: создание нового пациента,
          - update / partial_update: обновление пациента,
          - destroy: удаление пациента.

        Поиск пациентов осуществляется через параметр `search` в GET-запросе.
        Поиск выполняется по:
        - началу фамилии (case-insensitive)
        - началу имени (case-insensitive)
        - началу отчества (case-insensitive)
        - названию контрагента (частичное совпадение)
      summary: Создание нового пациента
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patient'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /api/v0/patient-conditions/:
    get:
      operationId: v0_patient_conditions_list
      description: |-
        API для работы с состоянием пациента с поддержкой пагинации.
        Поддерживаются операции:
          - list: получение списка с пагинацией
            (требуется permission "patient_condition.view_patientcondition"),
          - retrieve: получение  по id
            (требуется permission "patient_condition.view_patientcondition"),
          - create: создание нового
            (требуется permission "patient_condition.add_patientcondition"),
          - update / partial_update: обновление
            (требуется permission "patient_condition.change_patientcondition"),
          - destroy: удаление
            (требуется permission "patient_condition.delete_patientcondition").
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPatientConditionList'
          description: ''
    post:
      operationId: v0_patient_conditions_create
      description: |-
        API для работы с состоянием пациента с поддержкой пагинации.
        Поддерживаются операции:
          - list: получение списка с пагинацией
            (требуется permission "patient_condition.view_patientcondition"),
          - retrieve: получение  по id
            (требуется permission "patient_condition.view_patientcondition"),
          - create: создание нового
            (требуется permission "patient_condition.add_patientcondition"),
          - update / partial_update: обновление
            (требуется permission "patient_condition.change_patientcondition"),
          - destroy: удаление
            (требуется permission "patient_condition.delete_patientcondition").
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatientCondition'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientCondition'
          description: ''
  /api/v0/patient-conditions/{id}/:
    get:
      operationId: v0_patient_conditions_retrieve
      description: |-
        API для работы с состоянием пациента с поддержкой пагинации.
        Поддерживаются операции:
          - list: получение списка с пагинацией
            (требуется permission "patient_condition.view_patientcondition"),
          - retrieve: получение  по id
            (требуется permission "patient_condition.view_patientcondition"),
          - create: создание нового
            (требуется permission "patient_condition.add_patientcondition"),
          - update / partial_update: обновление
            (требуется permission "patient_condition.change_patientcondition"),
          - destroy: удаление
            (требуется permission "patient_condition.delete_patientcondition").
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Состояние пациента.
        required: true
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientCondition'
          description: ''
    put:
      operationId: v0_patient_conditions_update
      description: |-
        API для работы с состоянием пациента с поддержкой пагинации.
        Поддерживаются операции:
          - list: получение списка с пагинацией
            (требуется permission "patient_condition.view_patientcondition"),
          - retrieve: получение  по id
            (требуется permission "patient_condition.view_patientcondition"),
          - create: создание нового
            (требуется permission "patient_condition.add_patientcondition"),
          - update / partial_update: обновление
            (требуется permission "patient_condition.change_patientcondition"),
          - destroy: удаление
            (требуется permission "patient_condition.delete_patientcondition").
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Состояние пациента.
        required: true
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatientCondition'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientCondition'
          description: ''
    patch:
      operationId: v0_patient_conditions_partial_update
      description: |-
        API для работы с состоянием пациента с поддержкой пагинации.
        Поддерживаются операции:
          - list: получение списка с пагинацией
            (требуется permission "patient_condition.view_patientcondition"),
          - retrieve: получение  по id
            (требуется permission "patient_condition.view_patientcondition"),
          - create: создание нового
            (требуется permission "patient_condition.add_patientcondition"),
          - update / partial_update: обновление
            (требуется permission "patient_condition.change_patientcondition"),
          - destroy: удаление
            (требуется permission "patient_condition.delete_patientcondition").
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Состояние пациента.
        required: true
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPatientCondition'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientCondition'
          description: ''
    delete:
      operationId: v0_patient_conditions_destroy
      description: |-
        API для работы с состоянием пациента с поддержкой пагинации.
        Поддерживаются операции:
          - list: получение списка с пагинацией
            (требуется permission "patient_condition.view_patientcondition"),
          - retrieve: получение  по id
            (требуется permission "patient_condition.view_patientcondition"),
          - create: создание нового
            (требуется permission "patient_condition.add_patientcondition"),
          - update / partial_update: обновление
            (требуется permission "patient_condition.change_patientcondition"),
          - destroy: удаление
            (требуется permission "patient_condition.delete_patientcondition").
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Состояние пациента.
        required: true
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v0/patient/{id}/:
    get:
      operationId: v0_patient_retrieve
      description: |-
        API для работы с пациентами с поддержкой пагинации.
        Поддерживаются операции:
          - list: получение списка пациентов с пагинацией и поиском,
          - retrieve: получение пациента по ID,
          - create: создание нового пациента,
          - update / partial_update: обновление пациента,
          - destroy: удаление пациента.

        Поиск пациентов осуществляется через параметр `search` в GET-запросе.
        Поиск выполняется по:
        - началу фамилии (case-insensitive)
        - началу имени (case-insensitive)
        - началу отчества (case-insensitive)
        - названию контрагента (частичное совпадение)
      summary: Получение пациента по ID
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Пациент.
        required: true
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
          description: ''
    put:
      operationId: v0_patient_update
      description: |-
        API для работы с пациентами с поддержкой пагинации.
        Поддерживаются операции:
          - list: получение списка пациентов с пагинацией и поиском,
          - retrieve: получение пациента по ID,
          - create: создание нового пациента,
          - update / partial_update: обновление пациента,
          - destroy: удаление пациента.

        Поиск пациентов осуществляется через параметр `search` в GET-запросе.
        Поиск выполняется по:
        - началу фамилии (case-insensitive)
        - началу имени (case-insensitive)
        - началу отчества (case-insensitive)
        - названию контрагента (частичное совпадение)
      summary: Полное обновление данных пациента
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Пациент.
        required: true
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patient'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
          description: ''
    patch:
      operationId: v0_patient_partial_update
      description: |-
        API для работы с пациентами с поддержкой пагинации.
        Поддерживаются операции:
          - list: получение списка пациентов с пагинацией и поиском,
          - retrieve: получение пациента по ID,
          - create: создание нового пациента,
          - update / partial_update: обновление пациента,
          - destroy: удаление пациента.

        Поиск пациентов осуществляется через параметр `search` в GET-запросе.
        Поиск выполняется по:
        - началу фамилии (case-insensitive)
        - началу имени (case-insensitive)
        - началу отчества (case-insensitive)
        - названию контрагента (частичное совпадение)
      summary: Частичное обновление данных пациента
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Пациент.
        required: true
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPatient'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
          description: ''
    delete:
      operationId: v0_patient_destroy
      description: |-
        API для работы с пациентами с поддержкой пагинации.
        Поддерживаются операции:
          - list: получение списка пациентов с пагинацией и поиском,
          - retrieve: получение пациента по ID,
          - create: создание нового пациента,
          - update / partial_update: обновление пациента,
          - destroy: удаление пациента.

        Поиск пациентов осуществляется через параметр `search` в GET-запросе.
        Поиск выполняется по:
        - началу фамилии (case-insensitive)
        - началу имени (case-insensitive)
        - началу отчества (case-insensitive)
        - названию контрагента (частичное совпадение)
      summary: Удаление пациента
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Пациент.
        required: true
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
        '403':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /api/v0/permission-group-current-user/:
    get:
      operationId: v0_permission_group_current_user_retrieve
      description: ViewSet для получения прав текущего пользователя и его групп.
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v0/position/:
    get:
      operationId: v0_position_list
      description: Возвращает список всех должностей с пагинацией
      summary: Получение списка должностей
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPositionList'
          description: ''
    post:
      operationId: v0_position_create
      description: |-
        API для работы с должностями.

        Поддерживаются операции:
          - list: получение списка должностей (требуется permission "staffing.view_position"),
          - retrieve: получение должности по id (требуется permission "staffing.view_position"),
          - create: создание новой должности (требуется permission "staffing.add_position"),
          - update/partial_update: обновление должности (требуется permission "staffing.change_position"),
          - destroy: удаление должности (требуется permission "staffing.delete_position").
      summary: Создание новой должности
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Position'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Position'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /api/v0/position/{id}/:
    get:
      operationId: v0_position_retrieve
      description: |-
        API для работы с должностями.

        Поддерживаются операции:
          - list: получение списка должностей (требуется permission "staffing.view_position"),
          - retrieve: получение должности по id (требуется permission "staffing.view_position"),
          - create: создание новой должности (требуется permission "staffing.add_position"),
          - update/partial_update: обновление должности (требуется permission "staffing.change_position"),
          - destroy: удаление должности (требуется permission "staffing.delete_position").
      summary: Получение должности по ID
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Должность.
        required: true
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Position'
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
    put:
      operationId: v0_position_update
      description: |-
        API для работы с должностями.

        Поддерживаются операции:
          - list: получение списка должностей (требуется permission "staffing.view_position"),
          - retrieve: получение должности по id (требуется permission "staffing.view_position"),
          - create: создание новой должности (требуется permission "staffing.add_position"),
          - update/partial_update: обновление должности (требуется permission "staffing.change_position"),
          - destroy: удаление должности (требуется permission "staffing.delete_position").
      summary: Полное обновление должности
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Должность.
        required: true
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Position'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Position'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
    patch:
      operationId: v0_position_partial_update
      description: |-
        API для работы с должностями.

        Поддерживаются операции:
          - list: получение списка должностей (требуется permission "staffing.view_position"),
          - retrieve: получение должности по id (требуется permission "staffing.view_position"),
          - create: создание новой должности (требуется permission "staffing.add_position"),
          - update/partial_update: обновление должности (требуется permission "staffing.change_position"),
          - destroy: удаление должности (требуется permission "staffing.delete_position").
      summary: Частичное обновление должности
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Должность.
        required: true
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPosition'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Position'
          description: ''
    delete:
      operationId: v0_position_destroy
      description: |-
        API для работы с должностями.

        Поддерживаются операции:
          - list: получение списка должностей (требуется permission "staffing.view_position"),
          - retrieve: получение должности по id (требуется permission "staffing.view_position"),
          - create: создание новой должности (требуется permission "staffing.add_position"),
          - update/partial_update: обновление должности (требуется permission "staffing.change_position"),
          - destroy: удаление должности (требуется permission "staffing.delete_position").
      summary: Удаление должности
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Должность.
        required: true
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
        '403':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /api/v0/reception-templates/:
    get:
      operationId: v0_reception_templates_list
      description: |-
        API для работы с врачебными шаблонами.
        Поддерживаются операции:
          - list: получение списка
            (требуется permission "reception_template.receptiontemplate"),
          - retrieve: получение  по id
            (требуется permission "reception_template.receptiontemplate"),
          - create: создание
            (требуется permission "reception_template.receptiontemplate"),
          - update / partial_update: обновление приема
            (требуется permission "reception_template.receptiontemplate"),
          - destroy: удаление
            (требуется permission "reception_template.receptiontemplate").
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReceptionTemplateList'
          description: ''
    post:
      operationId: v0_reception_templates_create
      description: |-
        API для работы с врачебными шаблонами.
        Поддерживаются операции:
          - list: получение списка
            (требуется permission "reception_template.receptiontemplate"),
          - retrieve: получение  по id
            (требуется permission "reception_template.receptiontemplate"),
          - create: создание
            (требуется permission "reception_template.receptiontemplate"),
          - update / partial_update: обновление приема
            (требуется permission "reception_template.receptiontemplate"),
          - destroy: удаление
            (требуется permission "reception_template.receptiontemplate").
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReceptionTemplate'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReceptionTemplate'
          description: ''
  /api/v0/reception-templates/{id}/:
    get:
      operationId: v0_reception_templates_retrieve
      description: |-
        API для работы с врачебными шаблонами.
        Поддерживаются операции:
          - list: получение списка
            (требуется permission "reception_template.receptiontemplate"),
          - retrieve: получение  по id
            (требуется permission "reception_template.receptiontemplate"),
          - create: создание
            (требуется permission "reception_template.receptiontemplate"),
          - update / partial_update: обновление приема
            (требуется permission "reception_template.receptiontemplate"),
          - destroy: удаление
            (требуется permission "reception_template.receptiontemplate").
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Шаблон приема.
        required: true
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReceptionTemplate'
          description: ''
    put:
      operationId: v0_reception_templates_update
      description: |-
        API для работы с врачебными шаблонами.
        Поддерживаются операции:
          - list: получение списка
            (требуется permission "reception_template.receptiontemplate"),
          - retrieve: получение  по id
            (требуется permission "reception_template.receptiontemplate"),
          - create: создание
            (требуется permission "reception_template.receptiontemplate"),
          - update / partial_update: обновление приема
            (требуется permission "reception_template.receptiontemplate"),
          - destroy: удаление
            (требуется permission "reception_template.receptiontemplate").
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Шаблон приема.
        required: true
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReceptionTemplate'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReceptionTemplate'
          description: ''
    patch:
      operationId: v0_reception_templates_partial_update
      description: |-
        API для работы с врачебными шаблонами.
        Поддерживаются операции:
          - list: получение списка
            (требуется permission "reception_template.receptiontemplate"),
          - retrieve: получение  по id
            (требуется permission "reception_template.receptiontemplate"),
          - create: создание
            (требуется permission "reception_template.receptiontemplate"),
          - update / partial_update: обновление приема
            (требуется permission "reception_template.receptiontemplate"),
          - destroy: удаление
            (требуется permission "reception_template.receptiontemplate").
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Шаблон приема.
        required: true
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedReceptionTemplate'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReceptionTemplate'
          description: ''
    delete:
      operationId: v0_reception_templates_destroy
      description: |-
        API для работы с врачебными шаблонами.
        Поддерживаются операции:
          - list: получение списка
            (требуется permission "reception_template.receptiontemplate"),
          - retrieve: получение  по id
            (требуется permission "reception_template.receptiontemplate"),
          - create: создание
            (требуется permission "reception_template.receptiontemplate"),
          - update / partial_update: обновление приема
            (требуется permission "reception_template.receptiontemplate"),
          - destroy: удаление
            (требуется permission "reception_template.receptiontemplate").
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Шаблон приема.
        required: true
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v0/reception-time/:
    get:
      operationId: v0_reception_time_list
      description: |-
        API для работы с временем приема.

        Поддерживаются операции:
          - list: получение списка записей времени приема с фильтрацией по подразделению
            (требуется permission "reception_time.view_receptiontime"),
          - retrieve: получение записи по id
            (требуется permission "reception_time.view_receptiontime"),
          - create: создание новой записи (автоматическая привязка к текущему сотруднику)
            (требуется permission "reception_time.add_receptiontime"),
          - update/partial_update: обновление записи
            (требуется permission "reception_time.change_receptiontime"),
          - destroy: удаление записи
            (требуется permission "reception_time.delete_receptiontime").
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReceptionTimeList'
          description: ''
    post:
      operationId: v0_reception_time_create
      description: |-
        API для работы с временем приема.

        Поддерживаются операции:
          - list: получение списка записей времени приема с фильтрацией по подразделению
            (требуется permission "reception_time.view_receptiontime"),
          - retrieve: получение записи по id
            (требуется permission "reception_time.view_receptiontime"),
          - create: создание новой записи (автоматическая привязка к текущему сотруднику)
            (требуется permission "reception_time.add_receptiontime"),
          - update/partial_update: обновление записи
            (требуется permission "reception_time.change_receptiontime"),
          - destroy: удаление записи
            (требуется permission "reception_time.delete_receptiontime").
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReceptionTime'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReceptionTime'
          description: ''
  /api/v0/reception-time/{id}/:
    get:
      operationId: v0_reception_time_retrieve
      description: |-
        API для работы с временем приема.

        Поддерживаются операции:
          - list: получение списка записей времени приема с фильтрацией по подразделению
            (требуется permission "reception_time.view_receptiontime"),
          - retrieve: получение записи по id
            (требуется permission "reception_time.view_receptiontime"),
          - create: создание новой записи (автоматическая привязка к текущему сотруднику)
            (требуется permission "reception_time.add_receptiontime"),
          - update/partial_update: обновление записи
            (требуется permission "reception_time.change_receptiontime"),
          - destroy: удаление записи
            (требуется permission "reception_time.delete_receptiontime").
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Время приёма.
        required: true
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReceptionTime'
          description: ''
    patch:
      operationId: v0_reception_time_partial_update
      description: |-
        API для работы с временем приема.

        Поддерживаются операции:
          - list: получение списка записей времени приема с фильтрацией по подразделению
            (требуется permission "reception_time.view_receptiontime"),
          - retrieve: получение записи по id
            (требуется permission "reception_time.view_receptiontime"),
          - create: создание новой записи (автоматическая привязка к текущему сотруднику)
            (требуется permission "reception_time.add_receptiontime"),
          - update/partial_update: обновление записи
            (требуется permission "reception_time.change_receptiontime"),
          - destroy: удаление записи
            (требуется permission "reception_time.delete_receptiontime").
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Время приёма.
        required: true
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedReceptionTime'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReceptionTime'
          description: ''
    delete:
      operationId: v0_reception_time_destroy
      description: |-
        API для работы с временем приема.

        Поддерживаются операции:
          - list: получение списка записей времени приема с фильтрацией по подразделению
            (требуется permission "reception_time.view_receptiontime"),
          - retrieve: получение записи по id
            (требуется permission "reception_time.view_receptiontime"),
          - create: создание новой записи (автоматическая привязка к текущему сотруднику)
            (требуется permission "reception_time.add_receptiontime"),
          - update/partial_update: обновление записи
            (требуется permission "reception_time.change_receptiontime"),
          - destroy: удаление записи
            (требуется permission "reception_time.delete_receptiontime").
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Время приёма.
        required: true
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v0/register-new-employee/:
    post:
      operationId: v0_register_new_employee_create
      description: Регистрация нового сотрудника. Данный эндпоинт доступен только
        для администратора.
      summary: Регистрация сотрудника
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrationInput'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrationOutput'
          description: ''
  /api/v0/shift/:
    get:
      operationId: v0_shift_list
      description: Возвращает список врачебных смен с поддержкой пагинации и фильтрацией
        по диапазону дат. Если переданы query-параметры 'start_date' и 'end_date'
        в формате YYYY-MM-DD, то будут возвращаться только те смены, у которых start_time
        попадает в указанный диапазон от начала start_date до конца end_date (до 23:59:59).
      summary: Получение списка смен
      parameters:
      - in: query
        name: end_date
        schema:
          type: string
        description: Конечная дата в формате YYYY-MM-DD
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: start_date
        schema:
          type: string
        description: Начальная дата в формате YYYY-MM-DD
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedShiftList'
          description: ''
    post:
      operationId: v0_shift_create
      description: |-
        API для работы с врачебной сменой (дежурствами) с поддержкой пагинации.
        Поддерживаются операции:
          - list: получение списка с пагинацией
            (требуется permission "shift.view_shift"),
          - retrieve: получение приема по id
            (требуется permission "shift.view_shift"),
          - create: создание нового приема
            (требуется permission "shift.add_shift"),
          - update / partial_update: обновление приема
            (требуется permission "shift.change_shift"),
          - destroy: удаление приема
            (требуется permission "shift.delete_shift").

        Дополнительно поддерживается фильтрация по диапазону дат.
        При передаче query-параметров "start_date" и "end_date" (формат YYYY-MM-DD)
        будут возвращаться только те смены, у которых start_time попадает в диапазон
        от начала start_date до конца end_date.
      summary: Создание новой смены
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shift'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shift'
          description: ''
  /api/v0/shift-transfers/:
    get:
      operationId: v0_shift_transfers_list
      description: |-
        API для работы с передачей врачебной сменой (дежурствами) с поддержкой пагинации.
        Поддерживаются операции:
          - list: получение списка с пагинацией
            (требуется permission "shift-transfer.view_shifttransfer"),
          - retrieve: получение приема по id
            (требуется permission "shift-transfer.view_shifttransfer"),
          - create: создание нового приема
            (требуется permission "shift-transfer.add_shifttransfer"),
          - update / partial_update: обновление приема
            (требуется permission "shift-transfer.change_shifttransfer"),
          - destroy: удаление приема
            (требуется permission "shift-transfer.delete_shifttransfer").
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedShiftTransferList'
          description: ''
    post:
      operationId: v0_shift_transfers_create
      description: |-
        API для работы с передачей врачебной сменой (дежурствами) с поддержкой пагинации.
        Поддерживаются операции:
          - list: получение списка с пагинацией
            (требуется permission "shift-transfer.view_shifttransfer"),
          - retrieve: получение приема по id
            (требуется permission "shift-transfer.view_shifttransfer"),
          - create: создание нового приема
            (требуется permission "shift-transfer.add_shifttransfer"),
          - update / partial_update: обновление приема
            (требуется permission "shift-transfer.change_shifttransfer"),
          - destroy: удаление приема
            (требуется permission "shift-transfer.delete_shifttransfer").
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShiftTransfer'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShiftTransfer'
          description: ''
  /api/v0/shift-transfers/{id}/:
    get:
      operationId: v0_shift_transfers_retrieve
      description: |-
        API для работы с передачей врачебной сменой (дежурствами) с поддержкой пагинации.
        Поддерживаются операции:
          - list: получение списка с пагинацией
            (требуется permission "shift-transfer.view_shifttransfer"),
          - retrieve: получение приема по id
            (требуется permission "shift-transfer.view_shifttransfer"),
          - create: создание нового приема
            (требуется permission "shift-transfer.add_shifttransfer"),
          - update / partial_update: обновление приема
            (требуется permission "shift-transfer.change_shifttransfer"),
          - destroy: удаление приема
            (требуется permission "shift-transfer.delete_shifttransfer").
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Передача врачебной смены.
        required: true
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShiftTransfer'
          description: ''
    put:
      operationId: v0_shift_transfers_update
      description: |-
        API для работы с передачей врачебной сменой (дежурствами) с поддержкой пагинации.
        Поддерживаются операции:
          - list: получение списка с пагинацией
            (требуется permission "shift-transfer.view_shifttransfer"),
          - retrieve: получение приема по id
            (требуется permission "shift-transfer.view_shifttransfer"),
          - create: создание нового приема
            (требуется permission "shift-transfer.add_shifttransfer"),
          - update / partial_update: обновление приема
            (требуется permission "shift-transfer.change_shifttransfer"),
          - destroy: удаление приема
            (требуется permission "shift-transfer.delete_shifttransfer").
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Передача врачебной смены.
        required: true
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShiftTransfer'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShiftTransfer'
          description: ''
    patch:
      operationId: v0_shift_transfers_partial_update
      description: |-
        API для работы с передачей врачебной сменой (дежурствами) с поддержкой пагинации.
        Поддерживаются операции:
          - list: получение списка с пагинацией
            (требуется permission "shift-transfer.view_shifttransfer"),
          - retrieve: получение приема по id
            (требуется permission "shift-transfer.view_shifttransfer"),
          - create: создание нового приема
            (требуется permission "shift-transfer.add_shifttransfer"),
          - update / partial_update: обновление приема
            (требуется permission "shift-transfer.change_shifttransfer"),
          - destroy: удаление приема
            (требуется permission "shift-transfer.delete_shifttransfer").
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Передача врачебной смены.
        required: true
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedShiftTransfer'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShiftTransfer'
          description: ''
    delete:
      operationId: v0_shift_transfers_destroy
      description: |-
        API для работы с передачей врачебной сменой (дежурствами) с поддержкой пагинации.
        Поддерживаются операции:
          - list: получение списка с пагинацией
            (требуется permission "shift-transfer.view_shifttransfer"),
          - retrieve: получение приема по id
            (требуется permission "shift-transfer.view_shifttransfer"),
          - create: создание нового приема
            (требуется permission "shift-transfer.add_shifttransfer"),
          - update / partial_update: обновление приема
            (требуется permission "shift-transfer.change_shifttransfer"),
          - destroy: удаление приема
            (требуется permission "shift-transfer.delete_shifttransfer").
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Передача врачебной смены.
        required: true
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v0/shift/{id}/:
    get:
      operationId: v0_shift_retrieve
      description: |-
        API для работы с врачебной сменой (дежурствами) с поддержкой пагинации.
        Поддерживаются операции:
          - list: получение списка с пагинацией
            (требуется permission "shift.view_shift"),
          - retrieve: получение приема по id
            (требуется permission "shift.view_shift"),
          - create: создание нового приема
            (требуется permission "shift.add_shift"),
          - update / partial_update: обновление приема
            (требуется permission "shift.change_shift"),
          - destroy: удаление приема
            (требуется permission "shift.delete_shift").

        Дополнительно поддерживается фильтрация по диапазону дат.
        При передаче query-параметров "start_date" и "end_date" (формат YYYY-MM-DD)
        будут возвращаться только те смены, у которых start_time попадает в диапазон
        от начала start_date до конца end_date.
      summary: Получение смены по id
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Врачебная смена.
        required: true
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shift'
          description: ''
    put:
      operationId: v0_shift_update
      description: |-
        API для работы с врачебной сменой (дежурствами) с поддержкой пагинации.
        Поддерживаются операции:
          - list: получение списка с пагинацией
            (требуется permission "shift.view_shift"),
          - retrieve: получение приема по id
            (требуется permission "shift.view_shift"),
          - create: создание нового приема
            (требуется permission "shift.add_shift"),
          - update / partial_update: обновление приема
            (требуется permission "shift.change_shift"),
          - destroy: удаление приема
            (требуется permission "shift.delete_shift").

        Дополнительно поддерживается фильтрация по диапазону дат.
        При передаче query-параметров "start_date" и "end_date" (формат YYYY-MM-DD)
        будут возвращаться только те смены, у которых start_time попадает в диапазон
        от начала start_date до конца end_date.
      summary: Полное обновление смены
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Врачебная смена.
        required: true
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shift'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shift'
          description: ''
    patch:
      operationId: v0_shift_partial_update
      description: |-
        API для работы с врачебной сменой (дежурствами) с поддержкой пагинации.
        Поддерживаются операции:
          - list: получение списка с пагинацией
            (требуется permission "shift.view_shift"),
          - retrieve: получение приема по id
            (требуется permission "shift.view_shift"),
          - create: создание нового приема
            (требуется permission "shift.add_shift"),
          - update / partial_update: обновление приема
            (требуется permission "shift.change_shift"),
          - destroy: удаление приема
            (требуется permission "shift.delete_shift").

        Дополнительно поддерживается фильтрация по диапазону дат.
        При передаче query-параметров "start_date" и "end_date" (формат YYYY-MM-DD)
        будут возвращаться только те смены, у которых start_time попадает в диапазон
        от начала start_date до конца end_date.
      summary: Частичное обновление смены
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Врачебная смена.
        required: true
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedShift'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shift'
          description: ''
    delete:
      operationId: v0_shift_destroy
      description: |-
        API для работы с врачебной сменой (дежурствами) с поддержкой пагинации.
        Поддерживаются операции:
          - list: получение списка с пагинацией
            (требуется permission "shift.view_shift"),
          - retrieve: получение приема по id
            (требуется permission "shift.view_shift"),
          - create: создание нового приема
            (требуется permission "shift.add_shift"),
          - update / partial_update: обновление приема
            (требуется permission "shift.change_shift"),
          - destroy: удаление приема
            (требуется permission "shift.delete_shift").

        Дополнительно поддерживается фильтрация по диапазону дат.
        При передаче query-параметров "start_date" и "end_date" (формат YYYY-MM-DD)
        будут возвращаться только те смены, у которых start_time попадает в диапазон
        от начала start_date до конца end_date.
      summary: Удаление смены
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Врачебная смена.
        required: true
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v0/specialization/:
    get:
      operationId: v0_specialization_list
      description: |-
        API для работы с специализациями.
        Поддерживаются операции:
            - list: получение списка должностей (требуется permission "specialization.view_specialization"),
            - retrieve: получение должности по id (требуется permission "specialization.view_specialization"),
            - create: создание новой должности (требуется permission "specialization.add_specialization"),
            - update/partial_update: обновление должности (требуется specialization "staffing.change_specialization"),
            - destroy: удаление должности (требуется permission "specialization.delete_specialization").
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSpecializationList'
          description: ''
    post:
      operationId: v0_specialization_create
      description: |-
        API для работы с специализациями.
        Поддерживаются операции:
            - list: получение списка должностей (требуется permission "specialization.view_specialization"),
            - retrieve: получение должности по id (требуется permission "specialization.view_specialization"),
            - create: создание новой должности (требуется permission "specialization.add_specialization"),
            - update/partial_update: обновление должности (требуется specialization "staffing.change_specialization"),
            - destroy: удаление должности (требуется permission "specialization.delete_specialization").
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Specialization'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Specialization'
          description: ''
  /api/v0/specialization/{id}/:
    get:
      operationId: v0_specialization_retrieve
      description: |-
        API для работы с специализациями.
        Поддерживаются операции:
            - list: получение списка должностей (требуется permission "specialization.view_specialization"),
            - retrieve: получение должности по id (требуется permission "specialization.view_specialization"),
            - create: создание новой должности (требуется permission "specialization.add_specialization"),
            - update/partial_update: обновление должности (требуется specialization "staffing.change_specialization"),
            - destroy: удаление должности (требуется permission "specialization.delete_specialization").
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Специализация врача.
        required: true
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Specialization'
          description: ''
    put:
      operationId: v0_specialization_update
      description: |-
        API для работы с специализациями.
        Поддерживаются операции:
            - list: получение списка должностей (требуется permission "specialization.view_specialization"),
            - retrieve: получение должности по id (требуется permission "specialization.view_specialization"),
            - create: создание новой должности (требуется permission "specialization.add_specialization"),
            - update/partial_update: обновление должности (требуется specialization "staffing.change_specialization"),
            - destroy: удаление должности (требуется permission "specialization.delete_specialization").
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Специализация врача.
        required: true
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Specialization'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Specialization'
          description: ''
    patch:
      operationId: v0_specialization_partial_update
      description: |-
        API для работы с специализациями.
        Поддерживаются операции:
            - list: получение списка должностей (требуется permission "specialization.view_specialization"),
            - retrieve: получение должности по id (требуется permission "specialization.view_specialization"),
            - create: создание новой должности (требуется permission "specialization.add_specialization"),
            - update/partial_update: обновление должности (требуется specialization "staffing.change_specialization"),
            - destroy: удаление должности (требуется permission "specialization.delete_specialization").
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Специализация врача.
        required: true
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSpecialization'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Specialization'
          description: ''
    delete:
      operationId: v0_specialization_destroy
      description: |-
        API для работы с специализациями.
        Поддерживаются операции:
            - list: получение списка должностей (требуется permission "specialization.view_specialization"),
            - retrieve: получение должности по id (требуется permission "specialization.view_specialization"),
            - create: создание новой должности (требуется permission "specialization.add_specialization"),
            - update/partial_update: обновление должности (требуется specialization "staffing.change_specialization"),
            - destroy: удаление должности (требуется permission "specialization.delete_specialization").
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Специализация врача.
        required: true
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v0/users/:
    get:
      operationId: v0_users_list
      description: |-
        API для работы с пациентами с поддержкой пагинации.
        Поддерживаются операции:
          — list: получение списка пользователей с пагинацией,
          — retrieve: получение пользователя по ID,
          — create: создание нового пациента,
          — update / partial_update: обновление пациента,
          — destroy: удаление пациента.
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: v0_users_create
      description: |-
        API для работы с пациентами с поддержкой пагинации.
        Поддерживаются операции:
          — list: получение списка пользователей с пагинацией,
          — retrieve: получение пользователя по ID,
          — create: создание нового пациента,
          — update / partial_update: обновление пациента,
          — destroy: удаление пациента.
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/v0/users/{id}/:
    get:
      operationId: v0_users_retrieve
      description: |-
        API для работы с пациентами с поддержкой пагинации.
        Поддерживаются операции:
          — list: получение списка пользователей с пагинацией,
          — retrieve: получение пользователя по ID,
          — create: создание нового пациента,
          — update / partial_update: обновление пациента,
          — destroy: удаление пациента.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this пользователь.
        required: true
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: v0_users_update
      description: |-
        API для работы с пациентами с поддержкой пагинации.
        Поддерживаются операции:
          — list: получение списка пользователей с пагинацией,
          — retrieve: получение пользователя по ID,
          — create: создание нового пациента,
          — update / partial_update: обновление пациента,
          — destroy: удаление пациента.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this пользователь.
        required: true
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: v0_users_partial_update
      description: |-
        API для работы с пациентами с поддержкой пагинации.
        Поддерживаются операции:
          — list: получение списка пользователей с пагинацией,
          — retrieve: получение пользователя по ID,
          — create: создание нового пациента,
          — update / partial_update: обновление пациента,
          — destroy: удаление пациента.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this пользователь.
        required: true
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: v0_users_destroy
      description: |-
        API для работы с пациентами с поддержкой пагинации.
        Поддерживаются операции:
          — list: получение списка пользователей с пагинацией,
          — retrieve: получение пользователя по ID,
          — create: создание нового пациента,
          — update / partial_update: обновление пациента,
          — destroy: удаление пациента.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this пользователь.
        required: true
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    AIRecommendationPatientCondition:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        document_template:
          type: integer
          nullable: true
        document:
          type: string
          nullable: true
        document_fields:
          nullable: true
        patient:
          type: integer
        shift:
          type: integer
        description:
          type: string
          nullable: true
        date:
          type: string
          format: date-time
          readOnly: true
        status:
          $ref: '#/components/schemas/Status1d6Enum'
      required:
      - date
      - id
      - patient
      - shift
      - status
    AIRecommendationsDoctorAppointment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        booking_appointment:
          type: integer
          nullable: true
        patient:
          type: integer
          nullable: true
        reception_template:
          type: integer
        reception_document:
          type: string
          nullable: true
        reception_document_fields:
          nullable: true
        assigned_doctor:
          type: integer
          nullable: true
        signed_by:
          type: integer
        is_first_appointment:
          type: boolean
          default: true
        is_closed:
          type: boolean
          default: false
        reason_for_inspection:
          type: string
          nullable: true
        inspection_choice:
          allOf:
          - $ref: '#/components/schemas/InspectionChoiceEnum'
          default: no_inspection
        appointment_date:
          type: string
          format: date
        start_time:
          type: string
          format: time
        end_time:
          type: string
          format: time
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_updated:
          type: string
          format: date-time
          readOnly: true
        medical_card:
          type: integer
          nullable: true
        diagnosis:
          type: integer
          nullable: true
      required:
      - appointment_date
      - date_created
      - date_updated
      - end_time
      - id
      - reception_template
      - signed_by
      - start_time
    BookingAppointment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        patient:
          type: integer
          title: Пациент
        patient_name:
          type: string
          readOnly: true
        doctor:
          type: integer
          title: Врач
        doctor_name:
          type: string
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/BookingAppointmentStatusEnum'
          title: Статус
        vizit_datetime:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Дата создания
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Дата обновления
        booking_str:
          type: string
          readOnly: true
      required:
      - booking_str
      - created_at
      - doctor
      - doctor_name
      - id
      - patient
      - patient_name
      - status
      - updated_at
      - vizit_datetime
    BookingAppointmentStatusEnum:
      enum:
      - planning
      - confirmation
      - отмена
      type: string
      description: |-
        * `planning` - планирование
        * `confirmation` - подтверждение
        * `отмена` - cancellation
    ChatRoom:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          nullable: true
          title: Название чата
          maxLength: 100
        room_type:
          allOf:
          - $ref: '#/components/schemas/RoomTypeEnum'
          title: Тип чата
        participants:
          type: array
          items:
            type: integer
          readOnly: true
        participant_ids:
          type: array
          items:
            type: integer
          writeOnly: true
      required:
      - id
      - participants
      - room_type
    Contractor:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        full_name:
          type: string
          title: Полное наименование
          maxLength: 255
        inn:
          type: string
          title: ИНН
          description: Введите 10 или 12 цифр ИНН
          maxLength: 12
        kpp:
          type: string
          nullable: true
          title: КПП
          maxLength: 9
        bank_account:
          type: string
          nullable: true
          title: Основной банковский счёт
          maxLength: 128
        economic_activity_type:
          type: string
          nullable: true
          title: Вид экономической деятельности
          maxLength: 255
        ownership_form:
          type: string
          nullable: true
          title: Форма собственности
          maxLength: 255
        insurance_organization:
          type: string
          nullable: true
          title: Страховая организация
          maxLength: 255
      required:
      - full_name
      - id
      - inn
    Diagnosis:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Название
          maxLength: 256
        description:
          type: string
          nullable: true
          title: Описание
        code:
          type: string
          nullable: true
          title: Код
          maxLength: 32
        synonym:
          type: string
          nullable: true
          title: Синонимы
        date_created:
          type: string
          format: date-time
          readOnly: true
          title: Дата создания
        date_updated:
          type: string
          format: date-time
          readOnly: true
          title: Дата обновления
        category:
          type: integer
          nullable: true
          title: Категория
      required:
      - date_created
      - date_updated
      - id
      - name
    DiagnosisCategory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Название
          maxLength: 128
        description:
          type: string
          nullable: true
      required:
      - id
      - name
    DoctorAppointment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        reason_for_inspection:
          type: string
          nullable: true
        is_signed:
          type: boolean
          nullable: true
          title: Подписано ЭП
        signed_date:
          type: string
          format: date
          readOnly: true
          nullable: true
          title: Дата подписания
        org_signature:
          nullable: true
          title: Организационная подпись
        reception_document:
          type: string
          nullable: true
          title: Документ приема
        reception_document_fields:
          nullable: true
          title: Поля документа
        is_first_appointment:
          type: boolean
          title: Флаг первого приема
          description: Флаг, означающий, что это первичный прием пациента
        is_closed:
          type: boolean
          title: Приём закрыт
          description: Флаг, указывающий, что приём закрыт
        inspection_choice:
          allOf:
          - $ref: '#/components/schemas/InspectionChoiceEnum'
          title: Тип обследования
        appointment_date:
          type: string
          format: date
          title: Дата приема
          description: Укажите дату приема (YYYY-MM-DD)
        start_time:
          type: string
          format: time
          title: Время начала приема
          description: Время начала приема
        end_time:
          type: string
          format: time
          title: Время окончания приема
          description: Время окончания приема
        date_created:
          type: string
          format: date-time
          readOnly: true
          title: Дата создания
        date_updated:
          type: string
          format: date-time
          readOnly: true
          title: Дата обновления
        booking_appointment:
          type: integer
          nullable: true
          title: Запись на прием
        patient:
          type: integer
          nullable: true
          title: Пациент
          description: Внешний ключ на пациента направленного на приём
        reception_template:
          type: integer
          nullable: true
          title: Шаблон приема
        assigned_doctor:
          type: integer
          nullable: true
          title: Назначенный врач
          description: Внешний ключ на врача, к которому был записан пациент
        signed_by:
          type: integer
          nullable: true
          title: Кем подписан
        medical_card:
          type: integer
          nullable: true
        diagnosis:
          type: integer
          nullable: true
          title: Диагноз
      required:
      - appointment_date
      - date_created
      - date_updated
      - end_time
      - id
      - signed_date
      - start_time
    Employee:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        short_description:
          type: string
          nullable: true
        last_name:
          type: string
          title: Фамилия
          maxLength: 150
        first_name:
          type: string
          title: Имя
          maxLength: 150
        patronymic:
          type: string
          nullable: true
          title: Отчество
          maxLength: 150
        gender:
          allOf:
          - $ref: '#/components/schemas/Gender71aEnum'
          title: Пол
        date_of_birth:
          type: string
          format: date
          nullable: true
          title: Дата рождения
        date_created:
          type: string
          format: date-time
          readOnly: true
          title: Дата создания
        snils:
          type: string
          nullable: true
          title: СНИЛС
          description: Укажите СНИЛС в формате 123-456-789 01 или 12345678901
          maxLength: 14
        inn:
          type: string
          nullable: true
          title: ИНН
          maxLength: 12
        passport_series:
          type: string
          nullable: true
          title: Серия паспорта
          pattern: ^\d{4}$
          maxLength: 4
        passport_number:
          type: string
          nullable: true
          title: Номер паспорта
          pattern: ^\d{6}$
          maxLength: 6
        photo:
          type: string
          format: uri
          nullable: true
          title: Фото
        registration_address:
          type: string
          nullable: true
          title: Адрес регистрации
          maxLength: 255
        actual_address:
          type: string
          nullable: true
          title: Адрес фактического проживания
          maxLength: 255
        email:
          type: string
          format: email
          nullable: true
          title: Почта
          maxLength: 254
        phone:
          type: string
          nullable: true
          title: Номер телефона
          maxLength: 20
        appointment_duration:
          type: string
          nullable: true
          title: Длительность приёма
        telegram_chat_id:
          type: string
          nullable: true
          title: Чат ID телеграмма для отправки уведомлений
          maxLength: 255
        user:
          type: integer
          nullable: true
          title: Пользователь
        department:
          type: integer
          nullable: true
          title: Подразделение
        position:
          type: integer
          nullable: true
          title: Должность
        specialization:
          type: integer
          nullable: true
          title: Специализация
      required:
      - date_created
      - first_name
      - id
      - last_name
    Filial:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          nullable: true
          title: Название
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Описание
        house:
          type: string
          title: Дом
          maxLength: 255
        building:
          type: string
          nullable: true
          title: Строение
          maxLength: 255
        street:
          type: string
          title: Улица
          maxLength: 255
        city:
          type: string
          title: Город
          maxLength: 255
      required:
      - city
      - house
      - id
      - street
    FilialDepartment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Название отделения
          maxLength: 255
        director:
          type: integer
          nullable: true
          title: Руководитель
        filial:
          type: integer
          nullable: true
          title: Филиал
      required:
      - filial
      - id
      - name
    Gender62bEnum:
      enum:
      - M
      - F
      type: string
      description: |-
        * `M` - Мужской
        * `F` - Женский
    Gender71aEnum:
      enum:
      - M
      - F
      - U
      type: string
      description: |-
        * `M` - Мужской
        * `F` - Женский
        * `U` - Не указан
    HospitalStays:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        patient:
          type: integer
          title: Пациент
        patient_name:
          type: string
          readOnly: true
        description:
          type: string
          nullable: true
          title: Описание
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        ward_number:
          type: string
          nullable: true
          title: Номер палаты
          maxLength: 10
        appointment:
          type: integer
          title: Прием
        appointment_str:
          type: string
          readOnly: true
        hospital_stay_str:
          type: string
          readOnly: true
        document_template:
          type: integer
          nullable: true
          title: Шаблон документа
        document:
          type: string
          nullable: true
          title: Документ смены
        document_fields:
          nullable: true
          title: Поля документа
      required:
      - appointment
      - appointment_str
      - end_date
      - hospital_stay_str
      - id
      - patient
      - patient_name
      - start_date
    InspectionChoiceEnum:
      enum:
      - no_inspection
      - additional
      - center
      - ambulatory
      - stationary
      - sanatorium
      - dispensary
      - preventive
      - referral
      type: string
      description: |-
        * `no_inspection` - Не нуждается в обследовании
        * `additional` - Нуждается в проведении доп обследования
        * `center` - Нуждается в обследовании в центре
        * `ambulatory` - Нуждается в амбулаторном обследовании
        * `stationary` - Нуждается в стационарном обследовании
        * `sanatorium` - Нуждается в санаторно-курортном лечении
        * `dispensary` - Нуждается в диспансерном наблюдении
        * `preventive` - Нуждается в лечебно-профилактических мероприятиях
        * `referral` - Нуждается в направлении на медико-социальную экспертизу
    LaboratoryModel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        guid:
          type: string
          format: uuid
          readOnly: true
          title: Уникальный идентификатор лаборатории
        name:
          type: string
          title: Название лаборатории
          maxLength: 255
        address:
          type: string
          title: Адрес лаборатории
          maxLength: 255
      required:
      - address
      - guid
      - id
      - name
    LaboratoryResearchModel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        lab_direction_guid:
          type: string
          format: uuid
          readOnly: true
          title: GUID направления
        status:
          allOf:
          - $ref: '#/components/schemas/LaboratoryResearchModelStatusEnum'
          title: Статус исследования
        number:
          type: string
          title: Номер документа
          maxLength: 50
        create_date:
          type: string
          format: date-time
          title: Дата создания
        direction_date:
          type: string
          format: date-time
          title: Дата направления
        previous_research_guid:
          type: string
          format: uuid
          nullable: true
          title: GUID предыдущего исследования
        is_previous_research:
          type: boolean
          title: Предыдущее исследование выполнено
        is_priority:
          type: boolean
          title: Приоритетное исследование (CITO)
        patient:
          type: integer
          nullable: true
          title: Пациент
        laboratory:
          type: integer
          title: Лаборатория
      required:
      - create_date
      - direction_date
      - id
      - lab_direction_guid
      - laboratory
      - number
      - status
    LaboratoryResearchModelStatusEnum:
      enum:
      - completed
      - process
      type: string
      description: |-
        * `completed` - Завершено
        * `process` - В процессе
    LaboratoryResearchPDFModel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        pdf_data:
          type: string
          format: byte
          readOnly: true
          title: PDF-документ
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Дата создания документа
        research:
          type: string
          format: uuid
          title: GUID направления
      required:
      - created_at
      - id
      - pdf_data
      - research
    Login:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          writeOnly: true
      required:
      - password
      - username
    MedicalCard:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        is_signed:
          type: boolean
          nullable: true
          title: Подписано ЭП
        signed_date:
          type: string
          format: date
          readOnly: true
          nullable: true
          title: Дата подписания
        org_signature:
          nullable: true
          title: Организационная подпись
        name:
          type: string
          title: Наименование
          maxLength: 255
        number:
          type: string
          title: Номер карты
          maxLength: 64
        date_created:
          type: string
          format: date-time
          readOnly: true
          title: Дата регистрации
        date_updated:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          title: Дата обновления
        date_closed:
          type: string
          format: date-time
          nullable: true
          title: Дата закрытия
        comment:
          type: string
          nullable: true
          title: Комментарий
        signed_by:
          type: integer
          nullable: true
          title: Кем подписан
        client:
          type: integer
          nullable: true
          title: Пациент
        card_type:
          type: integer
          nullable: true
          title: Тип карты
        filial:
          type: integer
          nullable: true
          title: Филиал
      required:
      - date_created
      - date_updated
      - id
      - name
      - signed_date
    MedicalCardType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Название
          maxLength: 255
        suffix:
          type: string
          nullable: true
          title: Суффикс номера карты
          maxLength: 16
        prefix:
          type: string
          nullable: true
          title: Префикс номера карты
          maxLength: 16
        begin_number:
          type: string
          nullable: true
          title: Начальный номер
          maxLength: 16
        description:
          type: string
          nullable: true
          title: Описание
      required:
      - id
      - name
    MedicineModel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        external_id:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Внешний ID
        klp_code:
          type: string
          title: Код КЛП
          maxLength: 200
        smnn_code:
          type: string
          title: Код узла СМНН
          maxLength: 200
        ktru_code:
          type: string
          title: Код КТРУ
          maxLength: 200
        name_trade:
          type: string
          title: Торговое наименование
          maxLength: 255
        standard_inn:
          type: string
          title: Стандартизованное МНН
          maxLength: 255
        standard_form:
          type: string
          title: Стандартизованная лекарственная форма
          maxLength: 255
        standard_doze:
          type: string
          title: Стандартизованная лекарственная доза
          maxLength: 50
        name_producer:
          type: string
          title: Наименование производителя
          maxLength: 255
        oksm_code:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          title: Код ОКСМ
        country:
          type: string
          title: Страна производителя
          maxLength: 100
        number_registration:
          type: string
          title: Номер регистрационного удостоверения
          maxLength: 200
        date_registration:
          type: string
          format: date
          title: Дата регистрационного удостоверения
          description: 'Формат: дд.мм.гггг'
        name_unit:
          type: string
          title: Наименование потребительской единицы
          maxLength: 50
        okei_code:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          title: Код ОКЕИ
        normalized_dosage:
          type: string
          title: Нормализованная дозировка
          maxLength: 50
        normalized_form:
          type: string
          title: Нормализованная форма
          maxLength: 255
        name_1_packing:
          type: string
          title: Наименование первичной упаковки
          maxLength: 100
        number_units_1:
          type: string
          title: Количество единиц в первичной упаковке
          maxLength: 50
        name_2_package:
          type: string
          title: Наименование вторичной упаковки
          maxLength: 100
        number_packages:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          title: Количество первичных упаковок во вторичной упаковке
        number_units_2:
          type: string
          title: Количество единиц во вторичной упаковке
          maxLength: 50
        okpd_2_code:
          type: string
          title: Код ОКПД 2
          maxLength: 100
        essential_medicines:
          type: string
          title: ЖНВЛП
          maxLength: 10
        narcotic_psychotropic:
          type: string
          title: Наличие наркотических/психотропных веществ
          maxLength: 10
        code_atc:
          type: string
          title: Код АТХ
          maxLength: 50
        name_atc:
          type: string
          title: Наименование АТХ
          maxLength: 255
        tn:
          type: string
          title: Наименование ФТГ
        completeness:
          type: string
          title: Комплектность упаковки
          maxLength: 50
      required:
      - code_atc
      - completeness
      - country
      - date_registration
      - essential_medicines
      - external_id
      - id
      - klp_code
      - ktru_code
      - name_1_packing
      - name_2_package
      - name_atc
      - name_producer
      - name_trade
      - name_unit
      - narcotic_psychotropic
      - normalized_dosage
      - normalized_form
      - number_packages
      - number_registration
      - number_units_1
      - number_units_2
      - okei_code
      - okpd_2_code
      - oksm_code
      - smnn_code
      - standard_doze
      - standard_form
      - standard_inn
      - tn
    PaginatedBookingAppointmentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/BookingAppointment'
    PaginatedContractorList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Contractor'
    PaginatedDiagnosisCategoryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/DiagnosisCategory'
    PaginatedDiagnosisList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Diagnosis'
    PaginatedDoctorAppointmentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/DoctorAppointment'
    PaginatedEmployeeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Employee'
    PaginatedFilialList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Filial'
    PaginatedHospitalStaysList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/HospitalStays'
    PaginatedLaboratoryModelList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/LaboratoryModel'
    PaginatedLaboratoryResearchModelList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/LaboratoryResearchModel'
    PaginatedLaboratoryResearchPDFModelList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/LaboratoryResearchPDFModel'
    PaginatedMedicalCardList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/MedicalCard'
    PaginatedMedicalCardTypeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/MedicalCardType'
    PaginatedMedicineModelList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/MedicineModel'
    PaginatedPatientConditionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PatientCondition'
    PaginatedPatientList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Patient'
    PaginatedPositionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Position'
    PaginatedReceptionTemplateList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ReceptionTemplate'
    PaginatedReceptionTimeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ReceptionTime'
    PaginatedShiftList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Shift'
    PaginatedShiftTransferList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ShiftTransfer'
    PaginatedSpecializationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Specialization'
    PatchedBookingAppointment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        patient:
          type: integer
          title: Пациент
        patient_name:
          type: string
          readOnly: true
        doctor:
          type: integer
          title: Врач
        doctor_name:
          type: string
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/BookingAppointmentStatusEnum'
          title: Статус
        vizit_datetime:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Дата создания
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Дата обновления
        booking_str:
          type: string
          readOnly: true
    PatchedChatRoom:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          nullable: true
          title: Название чата
          maxLength: 100
        room_type:
          allOf:
          - $ref: '#/components/schemas/RoomTypeEnum'
          title: Тип чата
        participants:
          type: array
          items:
            type: integer
          readOnly: true
        participant_ids:
          type: array
          items:
            type: integer
          writeOnly: true
    PatchedContractor:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        full_name:
          type: string
          title: Полное наименование
          maxLength: 255
        inn:
          type: string
          title: ИНН
          description: Введите 10 или 12 цифр ИНН
          maxLength: 12
        kpp:
          type: string
          nullable: true
          title: КПП
          maxLength: 9
        bank_account:
          type: string
          nullable: true
          title: Основной банковский счёт
          maxLength: 128
        economic_activity_type:
          type: string
          nullable: true
          title: Вид экономической деятельности
          maxLength: 255
        ownership_form:
          type: string
          nullable: true
          title: Форма собственности
          maxLength: 255
        insurance_organization:
          type: string
          nullable: true
          title: Страховая организация
          maxLength: 255
    PatchedDiagnosis:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Название
          maxLength: 256
        description:
          type: string
          nullable: true
          title: Описание
        code:
          type: string
          nullable: true
          title: Код
          maxLength: 32
        synonym:
          type: string
          nullable: true
          title: Синонимы
        date_created:
          type: string
          format: date-time
          readOnly: true
          title: Дата создания
        date_updated:
          type: string
          format: date-time
          readOnly: true
          title: Дата обновления
        category:
          type: integer
          nullable: true
          title: Категория
    PatchedDiagnosisCategory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Название
          maxLength: 128
        description:
          type: string
          nullable: true
    PatchedDoctorAppointment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        reason_for_inspection:
          type: string
          nullable: true
        is_signed:
          type: boolean
          nullable: true
          title: Подписано ЭП
        signed_date:
          type: string
          format: date
          readOnly: true
          nullable: true
          title: Дата подписания
        org_signature:
          nullable: true
          title: Организационная подпись
        reception_document:
          type: string
          nullable: true
          title: Документ приема
        reception_document_fields:
          nullable: true
          title: Поля документа
        is_first_appointment:
          type: boolean
          title: Флаг первого приема
          description: Флаг, означающий, что это первичный прием пациента
        is_closed:
          type: boolean
          title: Приём закрыт
          description: Флаг, указывающий, что приём закрыт
        inspection_choice:
          allOf:
          - $ref: '#/components/schemas/InspectionChoiceEnum'
          title: Тип обследования
        appointment_date:
          type: string
          format: date
          title: Дата приема
          description: Укажите дату приема (YYYY-MM-DD)
        start_time:
          type: string
          format: time
          title: Время начала приема
          description: Время начала приема
        end_time:
          type: string
          format: time
          title: Время окончания приема
          description: Время окончания приема
        date_created:
          type: string
          format: date-time
          readOnly: true
          title: Дата создания
        date_updated:
          type: string
          format: date-time
          readOnly: true
          title: Дата обновления
        booking_appointment:
          type: integer
          nullable: true
          title: Запись на прием
        patient:
          type: integer
          nullable: true
          title: Пациент
          description: Внешний ключ на пациента направленного на приём
        reception_template:
          type: integer
          nullable: true
          title: Шаблон приема
        assigned_doctor:
          type: integer
          nullable: true
          title: Назначенный врач
          description: Внешний ключ на врача, к которому был записан пациент
        signed_by:
          type: integer
          nullable: true
          title: Кем подписан
        medical_card:
          type: integer
          nullable: true
        diagnosis:
          type: integer
          nullable: true
          title: Диагноз
    PatchedEmployee:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        short_description:
          type: string
          nullable: true
        last_name:
          type: string
          title: Фамилия
          maxLength: 150
        first_name:
          type: string
          title: Имя
          maxLength: 150
        patronymic:
          type: string
          nullable: true
          title: Отчество
          maxLength: 150
        gender:
          allOf:
          - $ref: '#/components/schemas/Gender71aEnum'
          title: Пол
        date_of_birth:
          type: string
          format: date
          nullable: true
          title: Дата рождения
        date_created:
          type: string
          format: date-time
          readOnly: true
          title: Дата создания
        snils:
          type: string
          nullable: true
          title: СНИЛС
          description: Укажите СНИЛС в формате 123-456-789 01 или 12345678901
          maxLength: 14
        inn:
          type: string
          nullable: true
          title: ИНН
          maxLength: 12
        passport_series:
          type: string
          nullable: true
          title: Серия паспорта
          pattern: ^\d{4}$
          maxLength: 4
        passport_number:
          type: string
          nullable: true
          title: Номер паспорта
          pattern: ^\d{6}$
          maxLength: 6
        photo:
          type: string
          format: uri
          nullable: true
          title: Фото
        registration_address:
          type: string
          nullable: true
          title: Адрес регистрации
          maxLength: 255
        actual_address:
          type: string
          nullable: true
          title: Адрес фактического проживания
          maxLength: 255
        email:
          type: string
          format: email
          nullable: true
          title: Почта
          maxLength: 254
        phone:
          type: string
          nullable: true
          title: Номер телефона
          maxLength: 20
        appointment_duration:
          type: string
          nullable: true
          title: Длительность приёма
        telegram_chat_id:
          type: string
          nullable: true
          title: Чат ID телеграмма для отправки уведомлений
          maxLength: 255
        user:
          type: integer
          nullable: true
          title: Пользователь
        department:
          type: integer
          nullable: true
          title: Подразделение
        position:
          type: integer
          nullable: true
          title: Должность
        specialization:
          type: integer
          nullable: true
          title: Специализация
    PatchedFilial:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          nullable: true
          title: Название
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Описание
        house:
          type: string
          title: Дом
          maxLength: 255
        building:
          type: string
          nullable: true
          title: Строение
          maxLength: 255
        street:
          type: string
          title: Улица
          maxLength: 255
        city:
          type: string
          title: Город
          maxLength: 255
    PatchedFilialDepartment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Название отделения
          maxLength: 255
        director:
          type: integer
          nullable: true
          title: Руководитель
        filial:
          type: integer
          nullable: true
          title: Филиал
    PatchedHospitalStays:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        patient:
          type: integer
          title: Пациент
        patient_name:
          type: string
          readOnly: true
        description:
          type: string
          nullable: true
          title: Описание
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        ward_number:
          type: string
          nullable: true
          title: Номер палаты
          maxLength: 10
        appointment:
          type: integer
          title: Прием
        appointment_str:
          type: string
          readOnly: true
        hospital_stay_str:
          type: string
          readOnly: true
        document_template:
          type: integer
          nullable: true
          title: Шаблон документа
        document:
          type: string
          nullable: true
          title: Документ смены
        document_fields:
          nullable: true
          title: Поля документа
    PatchedMedicalCard:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        is_signed:
          type: boolean
          nullable: true
          title: Подписано ЭП
        signed_date:
          type: string
          format: date
          readOnly: true
          nullable: true
          title: Дата подписания
        org_signature:
          nullable: true
          title: Организационная подпись
        name:
          type: string
          title: Наименование
          maxLength: 255
        number:
          type: string
          title: Номер карты
          maxLength: 64
        date_created:
          type: string
          format: date-time
          readOnly: true
          title: Дата регистрации
        date_updated:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          title: Дата обновления
        date_closed:
          type: string
          format: date-time
          nullable: true
          title: Дата закрытия
        comment:
          type: string
          nullable: true
          title: Комментарий
        signed_by:
          type: integer
          nullable: true
          title: Кем подписан
        client:
          type: integer
          nullable: true
          title: Пациент
        card_type:
          type: integer
          nullable: true
          title: Тип карты
        filial:
          type: integer
          nullable: true
          title: Филиал
    PatchedMedicalCardType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Название
          maxLength: 255
        suffix:
          type: string
          nullable: true
          title: Суффикс номера карты
          maxLength: 16
        prefix:
          type: string
          nullable: true
          title: Префикс номера карты
          maxLength: 16
        begin_number:
          type: string
          nullable: true
          title: Начальный номер
          maxLength: 16
        description:
          type: string
          nullable: true
          title: Описание
    PatchedPatient:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        place_of_work:
          type: string
          nullable: true
        last_name:
          type: string
          title: Фамилия
          maxLength: 150
        first_name:
          type: string
          title: Имя
          maxLength: 150
        patronymic:
          type: string
          nullable: true
          title: Отчество
          maxLength: 150
        gender:
          allOf:
          - $ref: '#/components/schemas/Gender71aEnum'
          title: Пол
        date_of_birth:
          type: string
          format: date
          nullable: true
          title: Дата рождения
        date_created:
          type: string
          format: date-time
          readOnly: true
          title: Дата создания
        snils:
          type: string
          nullable: true
          title: СНИЛС
          description: Укажите СНИЛС в формате 123-456-789 01 или 12345678901
          maxLength: 14
        inn:
          type: string
          nullable: true
          title: ИНН
          maxLength: 12
        passport_series:
          type: string
          nullable: true
          title: Серия паспорта
          pattern: ^\d{4}$
          maxLength: 4
        passport_number:
          type: string
          nullable: true
          title: Номер паспорта
          pattern: ^\d{6}$
          maxLength: 6
        photo:
          type: string
          format: uri
          nullable: true
          title: Фото
        registration_address:
          type: string
          nullable: true
          title: Адрес регистрации
          maxLength: 255
        actual_address:
          type: string
          nullable: true
          title: Адрес фактического проживания
          maxLength: 255
        email:
          type: string
          format: email
          nullable: true
          title: Почта
          maxLength: 254
        phone:
          type: string
          nullable: true
          title: Номер телефона
          maxLength: 20
        additional_place_of_work:
          type: string
          nullable: true
          title: Дополнительное место работы
          maxLength: 255
        profession:
          type: string
          nullable: true
          title: Профессия
          maxLength: 255
        oms:
          type: string
          nullable: true
          title: ОМС
          maxLength: 255
        registered_by:
          type: integer
          nullable: true
          title: Человек, который зарегистрировал пациента
        contractor:
          type: integer
          nullable: true
          title: Контрагент (работодатель клиента)
        legal_representative:
          type: integer
          nullable: true
          title: Законный представитель
    PatchedPatientCondition:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        patient:
          type: integer
          title: Пациент
        patient_name:
          type: string
          readOnly: true
        shift:
          type: integer
          title: Врачебная смена
        shift_str:
          type: string
          readOnly: true
        description:
          type: string
          nullable: true
          title: Описание состояния пациента
        date:
          type: string
          format: date-time
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/Status1d6Enum'
          title: Статус состояния пацента
        condition_str:
          type: string
          readOnly: true
        document_template:
          type: integer
          nullable: true
          title: Шаблон документа
        document:
          type: string
          nullable: true
          title: Документ смены
        document_fields:
          nullable: true
          title: Поля документа
    PatchedPosition:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
        short_name:
          type: string
          nullable: true
        minzdrav_position:
          type: string
          nullable: true
        group:
          type: integer
          nullable: true
          title: Группа доступа
    PatchedReceptionTemplate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Название шаблона
          maxLength: 100
        description:
          type: string
          nullable: true
          title: Описание шаблона
        html:
          type: string
          nullable: true
          title: Шаблон
        fields:
          nullable: true
          title: Поля приема
        specialization:
          type: integer
          title: Специализация шаблона
    PatchedReceptionTime:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        reception_day:
          type: string
          format: date
          title: День приёма
          description: Укажите дату приёма (YYYY-MM-DD)
        start_time:
          type: string
          format: time
          title: Время начала
          description: Время начала рабочего периода
        end_time:
          type: string
          format: time
          title: Время окончания
          description: Время окончания рабочего периода
        doctor:
          type: integer
          title: Врач
    PatchedShift:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        doctor:
          type: integer
          title: Врач
        doctor_name:
          type: string
          readOnly: true
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        shift_str:
          type: string
          readOnly: true
        document_template:
          type: integer
          nullable: true
          title: Шаблон документа
        document:
          type: string
          nullable: true
          title: Документ смены
        document_fields:
          nullable: true
          title: Поля документа
    PatchedShiftTransfer:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        from_shift:
          type: integer
          title: Какая смена передается
        from_shift_str:
          type: string
          readOnly: true
        to_shift:
          type: integer
          title: Другая смена
        to_shift_str:
          type: string
          readOnly: true
        date:
          type: string
          format: date-time
          readOnly: true
        comment:
          type: string
          nullable: true
          title: Комментарий
        transfer_str:
          type: string
          readOnly: true
        document_template:
          type: integer
          nullable: true
          title: Шаблон документа
        document:
          type: string
          nullable: true
          title: Документ смены
        document_fields:
          nullable: true
          title: Поля документа
    PatchedSpecialization:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          title: Название специализации
          maxLength: 100
        description:
          type: string
          nullable: true
          title: Описание специализации
    PatchedUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          title: Имя пользователя
          maxLength: 128
        position_id:
          type: string
          readOnly: true
        position_name:
          type: string
          readOnly: true
    Patient:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        place_of_work:
          type: string
          nullable: true
        last_name:
          type: string
          title: Фамилия
          maxLength: 150
        first_name:
          type: string
          title: Имя
          maxLength: 150
        patronymic:
          type: string
          nullable: true
          title: Отчество
          maxLength: 150
        gender:
          allOf:
          - $ref: '#/components/schemas/Gender71aEnum'
          title: Пол
        date_of_birth:
          type: string
          format: date
          nullable: true
          title: Дата рождения
        date_created:
          type: string
          format: date-time
          readOnly: true
          title: Дата создания
        snils:
          type: string
          nullable: true
          title: СНИЛС
          description: Укажите СНИЛС в формате 123-456-789 01 или 12345678901
          maxLength: 14
        inn:
          type: string
          nullable: true
          title: ИНН
          maxLength: 12
        passport_series:
          type: string
          nullable: true
          title: Серия паспорта
          pattern: ^\d{4}$
          maxLength: 4
        passport_number:
          type: string
          nullable: true
          title: Номер паспорта
          pattern: ^\d{6}$
          maxLength: 6
        photo:
          type: string
          format: uri
          nullable: true
          title: Фото
        registration_address:
          type: string
          nullable: true
          title: Адрес регистрации
          maxLength: 255
        actual_address:
          type: string
          nullable: true
          title: Адрес фактического проживания
          maxLength: 255
        email:
          type: string
          format: email
          nullable: true
          title: Почта
          maxLength: 254
        phone:
          type: string
          nullable: true
          title: Номер телефона
          maxLength: 20
        additional_place_of_work:
          type: string
          nullable: true
          title: Дополнительное место работы
          maxLength: 255
        profession:
          type: string
          nullable: true
          title: Профессия
          maxLength: 255
        oms:
          type: string
          nullable: true
          title: ОМС
          maxLength: 255
        registered_by:
          type: integer
          nullable: true
          title: Человек, который зарегистрировал пациента
        contractor:
          type: integer
          nullable: true
          title: Контрагент (работодатель клиента)
        legal_representative:
          type: integer
          nullable: true
          title: Законный представитель
      required:
      - date_created
      - first_name
      - id
      - last_name
    PatientCondition:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        patient:
          type: integer
          title: Пациент
        patient_name:
          type: string
          readOnly: true
        shift:
          type: integer
          title: Врачебная смена
        shift_str:
          type: string
          readOnly: true
        description:
          type: string
          nullable: true
          title: Описание состояния пациента
        date:
          type: string
          format: date-time
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/Status1d6Enum'
          title: Статус состояния пацента
        condition_str:
          type: string
          readOnly: true
        document_template:
          type: integer
          nullable: true
          title: Шаблон документа
        document:
          type: string
          nullable: true
          title: Документ смены
        document_fields:
          nullable: true
          title: Поля документа
      required:
      - condition_str
      - date
      - id
      - patient
      - patient_name
      - shift
      - shift_str
      - status
    Position:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
        short_name:
          type: string
          nullable: true
        minzdrav_position:
          type: string
          nullable: true
        group:
          type: integer
          nullable: true
          title: Группа доступа
      required:
      - id
      - name
    ReceptionTemplate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Название шаблона
          maxLength: 100
        description:
          type: string
          nullable: true
          title: Описание шаблона
        html:
          type: string
          nullable: true
          title: Шаблон
        fields:
          nullable: true
          title: Поля приема
        specialization:
          type: integer
          title: Специализация шаблона
      required:
      - id
      - name
      - specialization
    ReceptionTime:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        reception_day:
          type: string
          format: date
          title: День приёма
          description: Укажите дату приёма (YYYY-MM-DD)
        start_time:
          type: string
          format: time
          title: Время начала
          description: Время начала рабочего периода
        end_time:
          type: string
          format: time
          title: Время окончания
          description: Время окончания рабочего периода
        doctor:
          type: integer
          title: Врач
      required:
      - doctor
      - end_time
      - id
      - reception_day
      - start_time
    RegistrationInput:
      type: object
      properties:
        first_name:
          type: string
          description: Имя сотрудника
        last_name:
          type: string
          description: Фамилия сотрудника
        patronymic:
          type: string
          description: Отчество сотрудника
        is_django_user:
          type: boolean
          description: Определяет, может ли пользователь заходить в систему
        gender:
          allOf:
          - $ref: '#/components/schemas/Gender62bEnum'
          description: |-
            Пол сотрудника

            * `M` - Мужской
            * `F` - Женский
        date_of_birth:
          type: string
          format: date
          description: Дата рождения сотрудника
        snils:
          type: string
          description: СНИЛС сотрудника
        inn:
          type: string
          description: ИНН сотрудника
        registration_address:
          type: string
          description: Адрес регистрации сотрудника
        actual_address:
          type: string
          description: Фактический адрес сотрудника
        email:
          type: string
          format: email
          description: Email сотрудника
        phone:
          type: string
          description: Номер телефона сотрудника
        department:
          type: integer
          description: ID отдела филиала
        position:
          type: integer
          description: ID должности сотрудника
        short_description:
          type: string
          description: Краткое описание сотрудника
      required:
      - actual_address
      - date_of_birth
      - department
      - email
      - first_name
      - gender
      - inn
      - is_django_user
      - last_name
      - patronymic
      - phone
      - position
      - registration_address
      - short_description
      - snils
    RegistrationOutput:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        patronymic:
          type: string
        gender:
          $ref: '#/components/schemas/Gender62bEnum'
        date_of_birth:
          type: string
          format: date
        snils:
          type: string
        inn:
          type: string
        registration_address:
          type: string
        actual_address:
          type: string
        email:
          type: string
          format: email
        phone:
          type: string
        department:
          type: integer
        position:
          type: integer
        short_description:
          type: string
        user:
          $ref: '#/components/schemas/UserCredentials'
      required:
      - actual_address
      - date_of_birth
      - department
      - email
      - first_name
      - gender
      - inn
      - last_name
      - patronymic
      - phone
      - position
      - registration_address
      - short_description
      - snils
      - user
    RoomTypeEnum:
      enum:
      - private
      - group
      type: string
      description: |-
        * `private` - Личный
        * `group` - Групповой
    Shift:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        doctor:
          type: integer
          title: Врач
        doctor_name:
          type: string
          readOnly: true
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        shift_str:
          type: string
          readOnly: true
        document_template:
          type: integer
          nullable: true
          title: Шаблон документа
        document:
          type: string
          nullable: true
          title: Документ смены
        document_fields:
          nullable: true
          title: Поля документа
      required:
      - doctor
      - doctor_name
      - end_time
      - id
      - shift_str
      - start_time
    ShiftTransfer:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        from_shift:
          type: integer
          title: Какая смена передается
        from_shift_str:
          type: string
          readOnly: true
        to_shift:
          type: integer
          title: Другая смена
        to_shift_str:
          type: string
          readOnly: true
        date:
          type: string
          format: date-time
          readOnly: true
        comment:
          type: string
          nullable: true
          title: Комментарий
        transfer_str:
          type: string
          readOnly: true
        document_template:
          type: integer
          nullable: true
          title: Шаблон документа
        document:
          type: string
          nullable: true
          title: Документ смены
        document_fields:
          nullable: true
          title: Поля документа
      required:
      - date
      - from_shift
      - from_shift_str
      - id
      - to_shift
      - to_shift_str
      - transfer_str
    Specialization:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          title: Название специализации
          maxLength: 100
        description:
          type: string
          nullable: true
          title: Описание специализации
      required:
      - id
      - title
    Status1d6Enum:
      enum:
      - Critical
      - Worsening
      - Stable
      - Improving
      - Recovering
      - Post-operative
      - Unstable
      - No change
      type: string
      description: |-
        * `Critical` - Критическое
        * `Worsening` - Ухудшение
        * `Stable` - Стабильное
        * `Improving` - Улучшение
        * `Recovering` - Выздоровление
        * `Post-operative` - Послеоперационное
        * `Unstable` - Неустойчивое
        * `No change` - Без изменений
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          title: Имя пользователя
          maxLength: 128
        position_id:
          type: string
          readOnly: true
        position_name:
          type: string
          readOnly: true
      required:
      - id
      - position_id
      - position_name
      - username
    UserCredentials:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
      - password
      - username
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
