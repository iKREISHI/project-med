openapi: 3.0.3
info:
  title: Project Med API
  version: 1.0.0
  description: Automated workstation for the doctor on duty
paths:
  /api/v0/current-user/:
    get:
      operationId: v0_current_user_list
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
  /api/v0/employee/:
    get:
      operationId: v0_employee_list
      description: |-
        API для работы с сотрудниками с поддержкой пагинации.
        Поддерживаются операции:
          - list: получение списка сотрудников с пагинацией (требуется permission "staffing.view_employee"),
          - retrieve: получение сотрудника по UUID (требуется permission "staffing.view_employee"),
          - create: создание нового сотрудника (требуется permission "staffing.add_employee"),
          - update / partial_update: обновление сотрудника (требуется permission "staffing.change_employee"),
          - destroy: удаление сотрудника (требуется permission "staffing.delete_employee").
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEmployeeList'
          description: ''
    post:
      operationId: v0_employee_create
      description: |-
        API для работы с сотрудниками с поддержкой пагинации.
        Поддерживаются операции:
          - list: получение списка сотрудников с пагинацией (требуется permission "staffing.view_employee"),
          - retrieve: получение сотрудника по UUID (требуется permission "staffing.view_employee"),
          - create: создание нового сотрудника (требуется permission "staffing.add_employee"),
          - update / partial_update: обновление сотрудника (требуется permission "staffing.change_employee"),
          - destroy: удаление сотрудника (требуется permission "staffing.delete_employee").
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
          description: ''
  /api/v0/employee/{id}/:
    get:
      operationId: v0_employee_retrieve
      description: |-
        API для работы с сотрудниками с поддержкой пагинации.
        Поддерживаются операции:
          - list: получение списка сотрудников с пагинацией (требуется permission "staffing.view_employee"),
          - retrieve: получение сотрудника по UUID (требуется permission "staffing.view_employee"),
          - create: создание нового сотрудника (требуется permission "staffing.add_employee"),
          - update / partial_update: обновление сотрудника (требуется permission "staffing.change_employee"),
          - destroy: удаление сотрудника (требуется permission "staffing.delete_employee").
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Сотрудник.
        required: true
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
          description: ''
    put:
      operationId: v0_employee_update
      description: |-
        API для работы с сотрудниками с поддержкой пагинации.
        Поддерживаются операции:
          - list: получение списка сотрудников с пагинацией (требуется permission "staffing.view_employee"),
          - retrieve: получение сотрудника по UUID (требуется permission "staffing.view_employee"),
          - create: создание нового сотрудника (требуется permission "staffing.add_employee"),
          - update / partial_update: обновление сотрудника (требуется permission "staffing.change_employee"),
          - destroy: удаление сотрудника (требуется permission "staffing.delete_employee").
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Сотрудник.
        required: true
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
          description: ''
    patch:
      operationId: v0_employee_partial_update
      description: |-
        API для работы с сотрудниками с поддержкой пагинации.
        Поддерживаются операции:
          - list: получение списка сотрудников с пагинацией (требуется permission "staffing.view_employee"),
          - retrieve: получение сотрудника по UUID (требуется permission "staffing.view_employee"),
          - create: создание нового сотрудника (требуется permission "staffing.add_employee"),
          - update / partial_update: обновление сотрудника (требуется permission "staffing.change_employee"),
          - destroy: удаление сотрудника (требуется permission "staffing.delete_employee").
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Сотрудник.
        required: true
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEmployee'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
          description: ''
    delete:
      operationId: v0_employee_destroy
      description: |-
        API для работы с сотрудниками с поддержкой пагинации.
        Поддерживаются операции:
          - list: получение списка сотрудников с пагинацией (требуется permission "staffing.view_employee"),
          - retrieve: получение сотрудника по UUID (требуется permission "staffing.view_employee"),
          - create: создание нового сотрудника (требуется permission "staffing.add_employee"),
          - update / partial_update: обновление сотрудника (требуется permission "staffing.change_employee"),
          - destroy: удаление сотрудника (требуется permission "staffing.delete_employee").
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Сотрудник.
        required: true
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v0/login/:
    post:
      operationId: v0_login_create
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
          description: ''
  /api/v0/logout/:
    post:
      operationId: v0_logout_create
      tags:
      - v0
      security:
      - cookieAuth: []
      - {}
      responses:
        '201':
          description: No response body
  /api/v0/medical-card/:
    get:
      operationId: v0_medical_card_list
      description: |-
        API для работы с медицинскими картами с поддержкой пагинации.

        Поддерживаются операции:
          - list: получение списка медицинских карт (требуется permission "registry.view_medicalcard"),
          - retrieve: получение медицинской карты по UUID (требуется permission "registry.view_medicalcard"),
          - create: создание новой медицинской карты (требуется permission "registry.add_medicalcard"),
          - update/partial_update: обновление медицинской карты (требуется permission "registry.change_medicalcard"),
          - destroy: удаление медицинской карты (требуется permission "registry.delete_medicalcard").
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMedicalCardList'
          description: ''
    post:
      operationId: v0_medical_card_create
      description: |-
        API для работы с медицинскими картами с поддержкой пагинации.

        Поддерживаются операции:
          - list: получение списка медицинских карт (требуется permission "registry.view_medicalcard"),
          - retrieve: получение медицинской карты по UUID (требуется permission "registry.view_medicalcard"),
          - create: создание новой медицинской карты (требуется permission "registry.add_medicalcard"),
          - update/partial_update: обновление медицинской карты (требуется permission "registry.change_medicalcard"),
          - destroy: удаление медицинской карты (требуется permission "registry.delete_medicalcard").
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicalCard'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicalCard'
          description: ''
  /api/v0/medical-card/{id}/:
    get:
      operationId: v0_medical_card_retrieve
      description: |-
        API для работы с медицинскими картами с поддержкой пагинации.

        Поддерживаются операции:
          - list: получение списка медицинских карт (требуется permission "registry.view_medicalcard"),
          - retrieve: получение медицинской карты по UUID (требуется permission "registry.view_medicalcard"),
          - create: создание новой медицинской карты (требуется permission "registry.add_medicalcard"),
          - update/partial_update: обновление медицинской карты (требуется permission "registry.change_medicalcard"),
          - destroy: удаление медицинской карты (требуется permission "registry.delete_medicalcard").
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Медицинская карта.
        required: true
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicalCard'
          description: ''
    put:
      operationId: v0_medical_card_update
      description: |-
        API для работы с медицинскими картами с поддержкой пагинации.

        Поддерживаются операции:
          - list: получение списка медицинских карт (требуется permission "registry.view_medicalcard"),
          - retrieve: получение медицинской карты по UUID (требуется permission "registry.view_medicalcard"),
          - create: создание новой медицинской карты (требуется permission "registry.add_medicalcard"),
          - update/partial_update: обновление медицинской карты (требуется permission "registry.change_medicalcard"),
          - destroy: удаление медицинской карты (требуется permission "registry.delete_medicalcard").
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Медицинская карта.
        required: true
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicalCard'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicalCard'
          description: ''
    patch:
      operationId: v0_medical_card_partial_update
      description: |-
        API для работы с медицинскими картами с поддержкой пагинации.

        Поддерживаются операции:
          - list: получение списка медицинских карт (требуется permission "registry.view_medicalcard"),
          - retrieve: получение медицинской карты по UUID (требуется permission "registry.view_medicalcard"),
          - create: создание новой медицинской карты (требуется permission "registry.add_medicalcard"),
          - update/partial_update: обновление медицинской карты (требуется permission "registry.change_medicalcard"),
          - destroy: удаление медицинской карты (требуется permission "registry.delete_medicalcard").
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Медицинская карта.
        required: true
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMedicalCard'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicalCard'
          description: ''
    delete:
      operationId: v0_medical_card_destroy
      description: |-
        API для работы с медицинскими картами с поддержкой пагинации.

        Поддерживаются операции:
          - list: получение списка медицинских карт (требуется permission "registry.view_medicalcard"),
          - retrieve: получение медицинской карты по UUID (требуется permission "registry.view_medicalcard"),
          - create: создание новой медицинской карты (требуется permission "registry.add_medicalcard"),
          - update/partial_update: обновление медицинской карты (требуется permission "registry.change_medicalcard"),
          - destroy: удаление медицинской карты (требуется permission "registry.delete_medicalcard").
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Медицинская карта.
        required: true
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v0/messages/:
    get:
      operationId: v0_messages_list
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
          description: ''
    post:
      operationId: v0_messages_create
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          description: ''
  /api/v0/messages/{id}/:
    get:
      operationId: v0_messages_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this message.
        required: true
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          description: ''
    put:
      operationId: v0_messages_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this message.
        required: true
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          description: ''
    patch:
      operationId: v0_messages_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this message.
        required: true
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMessage'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          description: ''
    delete:
      operationId: v0_messages_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this message.
        required: true
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v0/patient/:
    get:
      operationId: v0_patient_list
      description: |-
        API для работы с пациентами с поддержкой пагинации.
        Поддерживаются операции:
          - list: получение списка пациентов с пагинацией,
          - retrieve: получение пациента по UUID,
          - create: создание нового пациента,
          - update / partial_update: обновление пациента,
          - destroy: удаление пациента.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPatientList'
          description: ''
    post:
      operationId: v0_patient_create
      description: |-
        API для работы с пациентами с поддержкой пагинации.
        Поддерживаются операции:
          - list: получение списка пациентов с пагинацией,
          - retrieve: получение пациента по UUID,
          - create: создание нового пациента,
          - update / partial_update: обновление пациента,
          - destroy: удаление пациента.
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patient'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
          description: ''
  /api/v0/patient/{id}/:
    get:
      operationId: v0_patient_retrieve
      description: |-
        API для работы с пациентами с поддержкой пагинации.
        Поддерживаются операции:
          - list: получение списка пациентов с пагинацией,
          - retrieve: получение пациента по UUID,
          - create: создание нового пациента,
          - update / partial_update: обновление пациента,
          - destroy: удаление пациента.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Пациент.
        required: true
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
          description: ''
    put:
      operationId: v0_patient_update
      description: |-
        API для работы с пациентами с поддержкой пагинации.
        Поддерживаются операции:
          - list: получение списка пациентов с пагинацией,
          - retrieve: получение пациента по UUID,
          - create: создание нового пациента,
          - update / partial_update: обновление пациента,
          - destroy: удаление пациента.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Пациент.
        required: true
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patient'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
          description: ''
    patch:
      operationId: v0_patient_partial_update
      description: |-
        API для работы с пациентами с поддержкой пагинации.
        Поддерживаются операции:
          - list: получение списка пациентов с пагинацией,
          - retrieve: получение пациента по UUID,
          - create: создание нового пациента,
          - update / partial_update: обновление пациента,
          - destroy: удаление пациента.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Пациент.
        required: true
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPatient'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
          description: ''
    delete:
      operationId: v0_patient_destroy
      description: |-
        API для работы с пациентами с поддержкой пагинации.
        Поддерживаются операции:
          - list: получение списка пациентов с пагинацией,
          - retrieve: получение пациента по UUID,
          - create: создание нового пациента,
          - update / partial_update: обновление пациента,
          - destroy: удаление пациента.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Пациент.
        required: true
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v0/registration/:
    post:
      operationId: v0_registration_create
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Registration'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registration'
          description: ''
  /api/v0/rooms/:
    get:
      operationId: v0_rooms_list
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChatRoom'
          description: ''
    post:
      operationId: v0_rooms_create
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatRoom'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatRoom'
          description: ''
  /api/v0/rooms/{id}/:
    get:
      operationId: v0_rooms_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this chat room.
        required: true
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatRoom'
          description: ''
    put:
      operationId: v0_rooms_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this chat room.
        required: true
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatRoom'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatRoom'
          description: ''
    patch:
      operationId: v0_rooms_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this chat room.
        required: true
      tags:
      - v0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedChatRoom'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatRoom'
          description: ''
    delete:
      operationId: v0_rooms_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this chat room.
        required: true
      tags:
      - v0
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    ChatRoom:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 100
        room_type:
          $ref: '#/components/schemas/RoomTypeEnum'
        participants:
          type: array
          items:
            type: string
            title: Имя пользователя
          readOnly: true
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
          readOnly: true
      required:
      - id
      - messages
      - participants
      - room_type
    Employee:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        short_description:
          type: string
          nullable: true
        last_name:
          type: string
          title: Фамилия
          maxLength: 150
        first_name:
          type: string
          title: Имя
          maxLength: 150
        patronymic:
          type: string
          nullable: true
          title: Отчество
          maxLength: 150
        gender:
          allOf:
          - $ref: '#/components/schemas/GenderEnum'
          title: Пол
        date_of_birth:
          type: string
          format: date
          nullable: true
          title: Дата рождения
        date_created:
          type: string
          format: date-time
          readOnly: true
          title: Дата создания
        snils:
          type: string
          nullable: true
          title: СНИЛС
          description: Укажите СНИЛС в формате 123-456-789 01 или 12345678901
          maxLength: 14
        inn:
          type: string
          nullable: true
          title: ИНН
          maxLength: 12
        photo:
          type: string
          format: uri
          nullable: true
          title: Фото
        registration_address:
          type: string
          nullable: true
          title: Адрес регистрации
          maxLength: 255
        actual_address:
          type: string
          nullable: true
          title: Адрес фактического проживания
          maxLength: 255
        email:
          type: string
          format: email
          nullable: true
          title: Почта
          maxLength: 254
        phone:
          type: string
          nullable: true
          title: Номер телефона
          maxLength: 20
        appointment_duration:
          type: string
          nullable: true
          title: Длительность приёма
        user:
          type: integer
          nullable: true
          title: Пользователь
        department:
          type: integer
          nullable: true
          title: Подразделение
        position:
          type: integer
          nullable: true
          title: Должность
      required:
      - date_created
      - first_name
      - id
      - last_name
    GenderEnum:
      enum:
      - M
      - F
      - U
      type: string
      description: |-
        * `M` - Мужской
        * `F` - Женский
        * `U` - Не указан
    Login:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
      - password
      - username
    MedicalCard:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        card_type:
          type: string
        is_signed:
          type: boolean
          title: Подписано ЭП
        signed_date:
          type: string
          format: date
          readOnly: true
          title: Дата подписания
        date_created:
          type: string
          format: date-time
          readOnly: true
          title: Дата регистрации
        comment:
          type: string
          nullable: true
          title: Комментарий
        signed_by:
          type: integer
          title: Кем подписан
        client:
          type: integer
          nullable: true
          title: Пациент
        filial:
          type: integer
          nullable: true
          title: Филиал
      required:
      - card_type
      - date_created
      - id
      - signed_by
      - signed_date
    Message:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        room:
          type: integer
        sender:
          type: string
          readOnly: true
        content:
          type: string
        timestamp:
          type: string
          format: date-time
          readOnly: true
      required:
      - content
      - id
      - room
      - sender
      - timestamp
    PaginatedEmployeeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Employee'
    PaginatedMedicalCardList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/MedicalCard'
    PaginatedPatientList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Patient'
    PatchedChatRoom:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 100
        room_type:
          $ref: '#/components/schemas/RoomTypeEnum'
        participants:
          type: array
          items:
            type: string
            title: Имя пользователя
          readOnly: true
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
          readOnly: true
    PatchedEmployee:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        short_description:
          type: string
          nullable: true
        last_name:
          type: string
          title: Фамилия
          maxLength: 150
        first_name:
          type: string
          title: Имя
          maxLength: 150
        patronymic:
          type: string
          nullable: true
          title: Отчество
          maxLength: 150
        gender:
          allOf:
          - $ref: '#/components/schemas/GenderEnum'
          title: Пол
        date_of_birth:
          type: string
          format: date
          nullable: true
          title: Дата рождения
        date_created:
          type: string
          format: date-time
          readOnly: true
          title: Дата создания
        snils:
          type: string
          nullable: true
          title: СНИЛС
          description: Укажите СНИЛС в формате 123-456-789 01 или 12345678901
          maxLength: 14
        inn:
          type: string
          nullable: true
          title: ИНН
          maxLength: 12
        photo:
          type: string
          format: uri
          nullable: true
          title: Фото
        registration_address:
          type: string
          nullable: true
          title: Адрес регистрации
          maxLength: 255
        actual_address:
          type: string
          nullable: true
          title: Адрес фактического проживания
          maxLength: 255
        email:
          type: string
          format: email
          nullable: true
          title: Почта
          maxLength: 254
        phone:
          type: string
          nullable: true
          title: Номер телефона
          maxLength: 20
        appointment_duration:
          type: string
          nullable: true
          title: Длительность приёма
        user:
          type: integer
          nullable: true
          title: Пользователь
        department:
          type: integer
          nullable: true
          title: Подразделение
        position:
          type: integer
          nullable: true
          title: Должность
    PatchedMedicalCard:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        card_type:
          type: string
        is_signed:
          type: boolean
          title: Подписано ЭП
        signed_date:
          type: string
          format: date
          readOnly: true
          title: Дата подписания
        date_created:
          type: string
          format: date-time
          readOnly: true
          title: Дата регистрации
        comment:
          type: string
          nullable: true
          title: Комментарий
        signed_by:
          type: integer
          title: Кем подписан
        client:
          type: integer
          nullable: true
          title: Пациент
        filial:
          type: integer
          nullable: true
          title: Филиал
    PatchedMessage:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        room:
          type: integer
        sender:
          type: string
          readOnly: true
        content:
          type: string
        timestamp:
          type: string
          format: date-time
          readOnly: true
    PatchedPatient:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        place_of_work:
          type: string
          nullable: true
        last_name:
          type: string
          title: Фамилия
          maxLength: 150
        first_name:
          type: string
          title: Имя
          maxLength: 150
        patronymic:
          type: string
          nullable: true
          title: Отчество
          maxLength: 150
        gender:
          allOf:
          - $ref: '#/components/schemas/GenderEnum'
          title: Пол
        date_of_birth:
          type: string
          format: date
          nullable: true
          title: Дата рождения
        date_created:
          type: string
          format: date-time
          readOnly: true
          title: Дата создания
        snils:
          type: string
          nullable: true
          title: СНИЛС
          description: Укажите СНИЛС в формате 123-456-789 01 или 12345678901
          maxLength: 14
        inn:
          type: string
          nullable: true
          title: ИНН
          maxLength: 12
        photo:
          type: string
          format: uri
          nullable: true
          title: Фото
        registration_address:
          type: string
          nullable: true
          title: Адрес регистрации
          maxLength: 255
        actual_address:
          type: string
          nullable: true
          title: Адрес фактического проживания
          maxLength: 255
        email:
          type: string
          format: email
          nullable: true
          title: Почта
          maxLength: 254
        phone:
          type: string
          nullable: true
          title: Номер телефона
          maxLength: 20
        additional_place_of_work:
          type: string
          nullable: true
          title: Дополнительное место работы
          maxLength: 255
        profession:
          type: string
          nullable: true
          title: Профессия
          maxLength: 255
        registered_by:
          type: integer
          nullable: true
          title: Человек, который зарегистрировал пациента
        contractor:
          type: integer
          nullable: true
          title: Контрагент (работодатель клиента)
        legal_representative:
          type: integer
          nullable: true
          title: Законный представитель
    Patient:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        place_of_work:
          type: string
          nullable: true
        last_name:
          type: string
          title: Фамилия
          maxLength: 150
        first_name:
          type: string
          title: Имя
          maxLength: 150
        patronymic:
          type: string
          nullable: true
          title: Отчество
          maxLength: 150
        gender:
          allOf:
          - $ref: '#/components/schemas/GenderEnum'
          title: Пол
        date_of_birth:
          type: string
          format: date
          nullable: true
          title: Дата рождения
        date_created:
          type: string
          format: date-time
          readOnly: true
          title: Дата создания
        snils:
          type: string
          nullable: true
          title: СНИЛС
          description: Укажите СНИЛС в формате 123-456-789 01 или 12345678901
          maxLength: 14
        inn:
          type: string
          nullable: true
          title: ИНН
          maxLength: 12
        photo:
          type: string
          format: uri
          nullable: true
          title: Фото
        registration_address:
          type: string
          nullable: true
          title: Адрес регистрации
          maxLength: 255
        actual_address:
          type: string
          nullable: true
          title: Адрес фактического проживания
          maxLength: 255
        email:
          type: string
          format: email
          nullable: true
          title: Почта
          maxLength: 254
        phone:
          type: string
          nullable: true
          title: Номер телефона
          maxLength: 20
        additional_place_of_work:
          type: string
          nullable: true
          title: Дополнительное место работы
          maxLength: 255
        profession:
          type: string
          nullable: true
          title: Профессия
          maxLength: 255
        registered_by:
          type: integer
          nullable: true
          title: Человек, который зарегистрировал пациента
        contractor:
          type: integer
          nullable: true
          title: Контрагент (работодатель клиента)
        legal_representative:
          type: integer
          nullable: true
          title: Законный представитель
      required:
      - date_created
      - first_name
      - id
      - last_name
    Registration:
      type: object
      properties:
        username:
          type: string
          title: Имя пользователя
          maxLength: 128
        password:
          type: string
          writeOnly: true
          title: Пароль
        password2:
          type: string
          writeOnly: true
          title: Подтверждение пароля
        avatar:
          type: string
          format: uri
          nullable: true
          title: Аватар
      required:
      - password
      - password2
      - username
    RoomTypeEnum:
      enum:
      - private
      - group
      type: string
      description: |-
        * `private` - Личный
        * `group` - Групповой
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          title: Имя пользователя
          maxLength: 128
        position_id:
          type: string
          readOnly: true
        position_name:
          type: string
          readOnly: true
      required:
      - id
      - position_id
      - position_name
      - username
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
